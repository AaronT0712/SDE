{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getLogger } from './logging.js';\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerived(derived) {\n  _derived = derived;\n}\nexport class ConvenientObservable {\n  get TChange() {\n    return null;\n  }\n  reportChanges() {\n    this.get();\n  }\n  /** @sealed */\n  read(reader) {\n    if (reader) {\n      return reader.readObservable(this);\n    } else {\n      return this.get();\n    }\n  }\n  /** @sealed */\n  map(fn) {\n    return _derived(() => {\n      const name = getFunctionName(fn);\n      return name !== undefined ? name : `${this.debugName} (mapped)`;\n    }, reader => fn(this.read(reader), reader));\n  }\n}\nexport class BaseObservable extends ConvenientObservable {\n  constructor() {\n    super(...arguments);\n    this.observers = new Set();\n  }\n  addObserver(observer) {\n    const len = this.observers.size;\n    this.observers.add(observer);\n    if (len === 0) {\n      this.onFirstObserverAdded();\n    }\n  }\n  removeObserver(observer) {\n    const deleted = this.observers.delete(observer);\n    if (deleted && this.observers.size === 0) {\n      this.onLastObserverRemoved();\n    }\n  }\n  onFirstObserverAdded() {}\n  onLastObserverRemoved() {}\n}\nexport function transaction(fn, getDebugName) {\n  var _a, _b;\n  const tx = new TransactionImpl(fn, getDebugName);\n  try {\n    (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleBeginTransaction(tx);\n    fn(tx);\n  } finally {\n    tx.finish();\n    (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleEndTransaction();\n  }\n}\nexport function subtransaction(tx, fn, getDebugName) {\n  if (!tx) {\n    transaction(fn, getDebugName);\n  } else {\n    fn(tx);\n  }\n}\nexport class TransactionImpl {\n  constructor(fn, _getDebugName) {\n    this.fn = fn;\n    this._getDebugName = _getDebugName;\n    this.updatingObservers = [];\n  }\n  getDebugName() {\n    if (this._getDebugName) {\n      return this._getDebugName();\n    }\n    return getFunctionName(this.fn);\n  }\n  updateObserver(observer, observable) {\n    this.updatingObservers.push({\n      observer,\n      observable\n    });\n    observer.beginUpdate(observable);\n  }\n  finish() {\n    const updatingObservers = this.updatingObservers;\n    // Prevent anyone from updating observers from now on.\n    this.updatingObservers = null;\n    for (const {\n      observer,\n      observable\n    } of updatingObservers) {\n      observer.endUpdate(observable);\n    }\n  }\n}\nexport function getFunctionName(fn) {\n  const fnSrc = fn.toString();\n  // Pattern: /** @description ... */\n  const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n  const match = regexp.exec(fnSrc);\n  const result = match ? match[1] : undefined;\n  return result === null || result === void 0 ? void 0 : result.trim();\n}\n/**\n * Creates an observable value.\n * Observers get informed when the value changes.\n */\nexport function observableValue(name, initialValue) {\n  return new ObservableValue(name, initialValue);\n}\nexport class ObservableValue extends BaseObservable {\n  constructor(debugName, initialValue) {\n    super();\n    this.debugName = debugName;\n    this._value = initialValue;\n  }\n  get() {\n    return this._value;\n  }\n  set(value, tx, change) {\n    var _a;\n    if (this._value === value) {\n      return;\n    }\n    let _tx;\n    if (!tx) {\n      tx = _tx = new TransactionImpl(() => {}, () => `Setting ${this.debugName}`);\n    }\n    try {\n      const oldValue = this._value;\n      this._setValue(value);\n      (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleObservableChanged(this, {\n        oldValue,\n        newValue: value,\n        change,\n        didChange: true\n      });\n      for (const observer of this.observers) {\n        tx.updateObserver(observer, this);\n        observer.handleChange(this, change);\n      }\n    } finally {\n      if (_tx) {\n        _tx.finish();\n      }\n    }\n  }\n  toString() {\n    return `${this.debugName}: ${this._value}`;\n  }\n  _setValue(newValue) {\n    this._value = newValue;\n  }\n}\nexport function disposableObservableValue(name, initialValue) {\n  return new DisposableObservableValue(name, initialValue);\n}\nexport class DisposableObservableValue extends ObservableValue {\n  _setValue(newValue) {\n    if (this._value === newValue) {\n      return;\n    }\n    if (this._value) {\n      this._value.dispose();\n    }\n    this._value = newValue;\n  }\n  dispose() {\n    var _a;\n    (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n  }\n}","map":{"version":3,"names":["getLogger","_derived","_setDerived","derived","ConvenientObservable","TChange","reportChanges","get","read","reader","readObservable","map","fn","name","getFunctionName","undefined","debugName","BaseObservable","constructor","arguments","observers","Set","addObserver","observer","len","size","add","onFirstObserverAdded","removeObserver","deleted","delete","onLastObserverRemoved","transaction","getDebugName","_a","_b","tx","TransactionImpl","handleBeginTransaction","finish","handleEndTransaction","subtransaction","_getDebugName","updatingObservers","updateObserver","observable","push","beginUpdate","endUpdate","fnSrc","toString","regexp","match","exec","result","trim","observableValue","initialValue","ObservableValue","_value","set","value","change","_tx","oldValue","_setValue","handleObservableChanged","newValue","didChange","handleChange","disposableObservableValue","DisposableObservableValue","dispose"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/base/common/observableImpl/base.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getLogger } from './logging.js';\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerived(derived) {\n    _derived = derived;\n}\nexport class ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    /** @sealed */\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    /** @sealed */\n    map(fn) {\n        return _derived(() => {\n            const name = getFunctionName(fn);\n            return name !== undefined ? name : `${this.debugName} (mapped)`;\n        }, (reader) => fn(this.read(reader), reader));\n    }\n}\nexport class BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\nexport function transaction(fn, getDebugName) {\n    var _a, _b;\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleBeginTransaction(tx);\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleEndTransaction();\n    }\n}\nexport function subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nexport class TransactionImpl {\n    constructor(fn, _getDebugName) {\n        this.fn = fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this.fn);\n    }\n    updateObserver(observer, observable) {\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        const updatingObservers = this.updatingObservers;\n        // Prevent anyone from updating observers from now on.\n        this.updatingObservers = null;\n        for (const { observer, observable } of updatingObservers) {\n            observer.endUpdate(observable);\n        }\n    }\n}\nexport function getFunctionName(fn) {\n    const fnSrc = fn.toString();\n    // Pattern: /** @description ... */\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result === null || result === void 0 ? void 0 : result.trim();\n}\n/**\n * Creates an observable value.\n * Observers get informed when the value changes.\n */\nexport function observableValue(name, initialValue) {\n    return new ObservableValue(name, initialValue);\n}\nexport class ObservableValue extends BaseObservable {\n    constructor(debugName, initialValue) {\n        super();\n        this.debugName = debugName;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        var _a;\n        if (this._value === value) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\nexport function disposableObservableValue(name, initialValue) {\n    return new DisposableObservableValue(name, initialValue);\n}\nexport class DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        var _a;\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}