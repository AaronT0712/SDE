{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { autorunWithStore2 } from '../../../../base/common/observableImpl/autorun.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showPreviousInlineSuggestionActionId, showNextInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n  constructor(editor, model, instantiationService) {\n    super();\n    this.editor = editor;\n    this.model = model;\n    this.instantiationService = instantiationService;\n    this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n    this.sessionPosition = undefined;\n    this.position = derived('position', reader => {\n      var _a, _b, _c;\n      const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n      if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n        this.sessionPosition = undefined;\n        return null;\n      }\n      const firstColumn = ghostText.parts[0].column;\n      if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n        this.sessionPosition = undefined;\n      }\n      const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n      this.sessionPosition = position;\n      return position;\n    });\n    this._register(autorunWithStore2('setup content widget', (reader, store) => {\n      const model = this.model.read(reader);\n      if (!model || !this.alwaysShowToolbar.read(reader)) {\n        return;\n      }\n      const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => {\n        var _a;\n        return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : [];\n      })));\n      editor.addContentWidget(contentWidget);\n      store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n      store.add(autorun('request explicit', reader => {\n        const position = this.position.read(reader);\n        if (!position) {\n          return;\n        }\n        if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n          model.triggerExplicitly();\n        }\n      }));\n    }));\n  }\n};\nInlineCompletionsHintsWidget = __decorate([__param(2, IInstantiationService)], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n  static get dropDownVisible() {\n    return this._dropDownVisible;\n  }\n  createCommandAction(commandId, label, iconClassName) {\n    const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n    const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n    let tooltip = label;\n    if (kb) {\n      tooltip = localize({\n        key: 'content',\n        comment: ['A label', 'A keybinding']\n      }, '{0} ({1})', label, kb.getLabel());\n    }\n    action.tooltip = tooltip;\n    return action;\n  }\n  constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n    super();\n    this.editor = editor;\n    this.withBorder = withBorder;\n    this._position = _position;\n    this._currentSuggestionIdx = _currentSuggestionIdx;\n    this._suggestionCount = _suggestionCount;\n    this._extraCommands = _extraCommands;\n    this._commandService = _commandService;\n    this.keybindingService = keybindingService;\n    this._contextKeyService = _contextKeyService;\n    this._menuService = _menuService;\n    this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n    this.allowEditorOverflow = true;\n    this.suppressMouseDown = false;\n    this.nodes = h('div.inlineSuggestionsHints', {\n      className: this.withBorder ? '.withBorder' : ''\n    }, [h('div', {\n      style: {\n        display: 'flex'\n      }\n    }, [h('div@actionBar', {\n      className: 'custom-actions'\n    }), h('div@toolBar')])]);\n    this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n    this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n    this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n    // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n    this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n    this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n      this.availableSuggestionCountAction.label = '';\n    }, 100));\n    this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n      this.previousAction.enabled = this.nextAction.enabled = false;\n    }, 100));\n    this.lastCommands = [];\n    const actionBar = this._register(new ActionBar(this.nodes.actionBar));\n    actionBar.push(this.previousAction, {\n      icon: true,\n      label: false\n    });\n    actionBar.push(this.availableSuggestionCountAction);\n    actionBar.push(this.nextAction, {\n      icon: true,\n      label: false\n    });\n    this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n      menuOptions: {\n        renderShortTitle: true\n      },\n      toolbarOptions: {\n        primaryGroup: g => g.startsWith('primary')\n      },\n      actionViewItemProvider: (action, options) => {\n        return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n      },\n      telemetrySource: 'InlineSuggestionToolbar'\n    }));\n    this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n      InlineSuggestionHintsContentWidget._dropDownVisible = e;\n    }));\n    this._register(autorun('update position', reader => {\n      this._position.read(reader);\n      this.editor.layoutContentWidget(this);\n    }));\n    this._register(autorun('counts', reader => {\n      const suggestionCount = this._suggestionCount.read(reader);\n      const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n      if (suggestionCount !== undefined) {\n        this.clearAvailableSuggestionCountLabelDebounced.cancel();\n        this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n      } else {\n        this.clearAvailableSuggestionCountLabelDebounced.schedule();\n      }\n      if (suggestionCount !== undefined && suggestionCount > 1) {\n        this.disableButtonsDebounced.cancel();\n        this.previousAction.enabled = this.nextAction.enabled = true;\n      } else {\n        this.disableButtonsDebounced.schedule();\n      }\n    }));\n    this._register(autorun('extra commands', reader => {\n      const extraCommands = this._extraCommands.read(reader);\n      if (equals(this.lastCommands, extraCommands)) {\n        // nothing to update\n        return;\n      }\n      this.lastCommands = extraCommands;\n      const extraActions = extraCommands.map(c => ({\n        class: undefined,\n        id: c.id,\n        enabled: true,\n        tooltip: c.tooltip || '',\n        label: c.title,\n        run: event => {\n          return this._commandService.executeCommand(c.id);\n        }\n      }));\n      for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n        for (const action of group) {\n          if (action instanceof MenuItemAction) {\n            extraActions.push(action);\n          }\n        }\n      }\n      if (extraActions.length > 0) {\n        extraActions.unshift(new Separator());\n      }\n      this.toolBar.setAdditionalSecondaryActions(extraActions);\n    }));\n  }\n  getId() {\n    return this.id;\n  }\n  getDomNode() {\n    return this.nodes.root;\n  }\n  getPosition() {\n    return {\n      position: this._position.get(),\n      preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n      positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */\n    };\n  }\n};\n\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = __decorate([__param(6, ICommandService), __param(7, IInstantiationService), __param(8, IKeybindingService), __param(9, IContextKeyService), __param(10, IMenuService)], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n  updateLabel() {\n    const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n    if (!kb) {\n      return super.updateLabel();\n    }\n    if (this.label) {\n      const div = h('div.keybinding').root;\n      const k = new KeybindingLabel(div, OS, Object.assign({\n        disableTitle: true\n      }, unthemedKeybindingLabelOptions));\n      k.set(kb);\n      this.label.textContent = this._action.label;\n      this.label.appendChild(div);\n      this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n    }\n  }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n  constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n    super(container, Object.assign({\n      resetMenu: menuId\n    }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n    this.menuId = menuId;\n    this.options2 = options2;\n    this.menuService = menuService;\n    this.contextKeyService = contextKeyService;\n    this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, {\n      emitEventsForSubmenuChanges: true\n    }));\n    this.additionalActions = [];\n    this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n    this.updateToolbar();\n  }\n  updateToolbar() {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const primary = [];\n    const secondary = [];\n    createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, {\n      primary,\n      secondary\n    }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n    secondary.push(...this.additionalActions);\n    this.setActions(primary, secondary);\n  }\n  setAdditionalSecondaryActions(actions) {\n    if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n      // don't update if the actions are the same\n      return;\n    }\n    this.additionalActions = actions;\n    this.updateToolbar();\n  }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([__param(3, IMenuService), __param(4, IContextKeyService), __param(5, IContextMenuService), __param(6, IKeybindingService), __param(7, ITelemetryService)], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","h","ActionBar","KeybindingLabel","unthemedKeybindingLabelOptions","Action","Separator","equals","RunOnceScheduler","Codicon","Disposable","toDisposable","autorun","derived","observableFromEvent","autorunWithStore2","OS","ThemeIcon","Position","InlineCompletionTriggerKind","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","localize","createAndFillInActionBarActions","MenuEntryActionViewItem","WorkbenchToolBar","IMenuService","MenuId","MenuItemAction","ICommandService","IContextKeyService","IContextMenuService","IInstantiationService","IKeybindingService","ITelemetryService","registerIcon","InlineCompletionsHintsWidget","constructor","editor","model","instantiationService","alwaysShowToolbar","onDidChangeConfiguration","getOption","showToolbar","sessionPosition","undefined","position","reader","_a","_b","_c","ghostText","read","parts","firstColumn","column","lineNumber","Math","min","Number","MAX_SAFE_INTEGER","_register","store","contentWidget","add","createInstance","InlineSuggestionHintsContentWidget","selectedInlineCompletionIndex","inlineCompletionsCount","selectedInlineCompletion","map","v","inlineCompletion","source","inlineCompletions","commands","addContentWidget","removeContentWidget","lastTriggerKind","Explicit","triggerExplicitly","inlineSuggestionHintsNextIcon","chevronRight","inlineSuggestionHintsPreviousIcon","chevronLeft","dropDownVisible","_dropDownVisible","createCommandAction","commandId","label","iconClassName","action","_commandService","executeCommand","kb","keybindingService","lookupKeybinding","_contextKeyService","tooltip","comment","getLabel","withBorder","_position","_currentSuggestionIdx","_suggestionCount","_extraCommands","_menuService","id","allowEditorOverflow","suppressMouseDown","nodes","className","style","display","previousAction","asClassName","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","InlineCompletionsActions","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","enabled","lastCommands","actionBar","push","icon","toolBar","CustomizedMenuWorkbenchToolBar","InlineSuggestionToolbar","menuOptions","renderShortTitle","toolbarOptions","primaryGroup","g","startsWith","actionViewItemProvider","options","StatusBarViewItem","telemetrySource","onDidChangeDropdownVisibility","e","layoutContentWidget","suggestionCount","currentSuggestionIdx","cancel","schedule","extraCommands","extraActions","class","title","run","event","_","group","getActions","unshift","setAdditionalSecondaryActions","getId","getDomNode","root","getPosition","get","preference","positionAffinity","updateLabel","_keybindingService","_action","div","k","assign","disableTitle","set","textContent","appendChild","classList","container","menuId","options2","menuService","contextKeyService","contextMenuService","telemetryService","resetMenu","menu","_store","emitEventsForSubmenuChanges","additionalActions","onDidChange","updateToolbar","_d","_e","_f","_g","primary","secondary","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","actions","a","b"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { autorunWithStore2 } from '../../../../base/common/observableImpl/autorun.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showPreviousInlineSuggestionActionId, showNextInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived('position', reader => {\n            var _a, _b, _c;\n            const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore2('setup content widget', (reader, store) => {\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; })));\n            editor.addContentWidget(contentWidget);\n            store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n            store.add(autorun('request explicit', reader => {\n                const position = this.position.read(reader);\n                if (!position) {\n                    return;\n                }\n                if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                    model.triggerExplicitly();\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div', { style: { display: 'flex' } }, [\n                h('div@actionBar', { className: 'custom-actions' }),\n                h('div@toolBar'),\n            ])\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.lastCommands = [];\n        const actionBar = this._register(new ActionBar(this.nodes.actionBar));\n        actionBar.push(this.previousAction, { icon: true, label: false });\n        actionBar.push(this.availableSuggestionCountAction);\n        actionBar.push(this.nextAction, { icon: true, label: false });\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget._dropDownVisible = e;\n        }));\n        this._register(autorun('update position', (reader) => {\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun('counts', (reader) => {\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun('extra commands', (reader) => {\n            const extraCommands = this._extraCommands.read(reader);\n            if (equals(this.lastCommands, extraCommands)) {\n                // nothing to update\n                return;\n            }\n            this.lastCommands = extraCommands;\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        this.setActions(primary, secondary);\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            // don't update if the actions are the same\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}