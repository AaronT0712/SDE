{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n  constructor() {\n    this._tabFocusTerminal = false;\n    this._tabFocusEditor = false;\n    this._onDidChangeTabFocus = new Emitter();\n    this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n  }\n  getTabFocusMode(context) {\n    return context === \"terminalFocus\" /* TabFocusContext.Terminal */ ? this._tabFocusTerminal : this._tabFocusEditor;\n  }\n  setTabFocusMode(tabFocusMode, context) {\n    if (context === \"terminalFocus\" /* TabFocusContext.Terminal */) {\n      this._tabFocusTerminal = tabFocusMode;\n    } else {\n      this._tabFocusEditor = tabFocusMode;\n    }\n    this._onDidChangeTabFocus.fire();\n  }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();","map":{"version":3,"names":["Emitter","TabFocusImpl","constructor","_tabFocusTerminal","_tabFocusEditor","_onDidChangeTabFocus","onDidChangeTabFocus","event","getTabFocusMode","context","setTabFocusMode","tabFocusMode","fire","TabFocus"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/browser/config/tabFocus.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n    constructor() {\n        this._tabFocusTerminal = false;\n        this._tabFocusEditor = false;\n        this._onDidChangeTabFocus = new Emitter();\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n    }\n    getTabFocusMode(context) {\n        return context === \"terminalFocus\" /* TabFocusContext.Terminal */ ? this._tabFocusTerminal : this._tabFocusEditor;\n    }\n    setTabFocusMode(tabFocusMode, context) {\n        if (context === \"terminalFocus\" /* TabFocusContext.Terminal */) {\n            this._tabFocusTerminal = tabFocusMode;\n        }\n        else {\n            this._tabFocusEditor = tabFocusMode;\n        }\n        this._onDidChangeTabFocus.fire();\n    }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,oBAAoB,GAAG,IAAIL,OAAO,CAAC,CAAC;IACzC,IAAI,CAACM,mBAAmB,GAAG,IAAI,CAACD,oBAAoB,CAACE,KAAK;EAC9D;EACAC,eAAeA,CAACC,OAAO,EAAE;IACrB,OAAOA,OAAO,KAAK,eAAe,CAAC,iCAAiC,IAAI,CAACN,iBAAiB,GAAG,IAAI,CAACC,eAAe;EACrH;EACAM,eAAeA,CAACC,YAAY,EAAEF,OAAO,EAAE;IACnC,IAAIA,OAAO,KAAK,eAAe,CAAC,gCAAgC;MAC5D,IAAI,CAACN,iBAAiB,GAAGQ,YAAY;IACzC,CAAC,MACI;MACD,IAAI,CAACP,eAAe,GAAGO,YAAY;IACvC;IACA,IAAI,CAACN,oBAAoB,CAACO,IAAI,CAAC,CAAC;EACpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAG,IAAIZ,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}