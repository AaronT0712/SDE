{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet InlineCompletionsController = class InlineCompletionsController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(InlineCompletionsController.ID);\n  }\n  constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService) {\n    super();\n    this.editor = editor;\n    this.instantiationService = instantiationService;\n    this.contextKeyService = contextKeyService;\n    this.configurationService = configurationService;\n    this.commandService = commandService;\n    this.debounceService = debounceService;\n    this.languageFeaturesService = languageFeaturesService;\n    this.audioCueService = audioCueService;\n    this.model = disposableObservableValue('inlineCompletionModel', undefined);\n    this.textModelVersionId = observableValue('textModelVersionId', -1);\n    this.cursorPosition = observableValue('cursorPosition', new Position(1, 1));\n    this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => {\n      var _a, _b;\n      return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined);\n    }, tx => this.updateObservables(tx, VersionIdChangeReason.Other)));\n    this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).enabled);\n    this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n      ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n      minReservedLineCount: constObservable(0),\n      targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel)\n    }));\n    this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', {\n      min: 50,\n      max: 50\n    });\n    this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n    this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n      /** @description onDidChangeModel */\n      this.model.set(undefined, tx);\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      const textModel = editor.getModel();\n      if (textModel) {\n        const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(61 /* EditorOption.inlineSuggest */).mode), this._enabled);\n        this.model.set(model, tx);\n      }\n    })));\n    const getReason = e => {\n      var _a;\n      if (e.isUndoing) {\n        return VersionIdChangeReason.Undo;\n      }\n      if (e.isRedoing) {\n        return VersionIdChangeReason.Redo;\n      }\n      if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n        return VersionIdChangeReason.AcceptWord;\n      }\n      return VersionIdChangeReason.Other;\n    };\n    this._register(editor.onDidChangeModelContent(e => transaction(tx => /** @description onDidChangeModelContent */\n    this.updateObservables(tx, getReason(e)))));\n    this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n      var _a;\n      /** @description onDidChangeCursorPosition */\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n      }\n    })));\n    this._register(editor.onDidType(() => transaction(tx => {\n      var _a;\n      /** @description onDidType */\n      this.updateObservables(tx, VersionIdChangeReason.Other);\n      if (this._enabled.get()) {\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n      }\n    })));\n    this._register(this.commandService.onDidExecuteCommand(e => {\n      // These commands don't trigger onDidType.\n      const commands = new Set([CoreEditingCommands.Tab.id, CoreEditingCommands.DeleteLeft.id, CoreEditingCommands.DeleteRight.id, inlineSuggestCommitId, 'acceptSelectedSuggestion']);\n      if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n        transaction(tx => {\n          var _a;\n          /** @description onDidExecuteCommand */\n          (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n        });\n      }\n    }));\n    this._register(this.editor.onDidBlurEditorWidget(() => {\n      // This is a hidden setting very useful for debugging\n      if (this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') || editor.getOption(61 /* EditorOption.inlineSuggest */).keepOnBlur) {\n        return;\n      }\n      if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n        return;\n      }\n      transaction(tx => {\n        var _a;\n        /** @description onDidBlurEditorWidget */\n        (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n      });\n    }));\n    this._register(autorun('forceRenderingAbove', reader => {\n      var _a;\n      const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n      if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n        if (state.ghostText.lineCount >= 2) {\n          this.suggestWidgetAdaptor.forceRenderingAbove();\n        }\n      } else {\n        this.suggestWidgetAdaptor.stopForceRenderingAbove();\n      }\n    }));\n    this._register(toDisposable(() => {\n      this.suggestWidgetAdaptor.stopForceRenderingAbove();\n    }));\n    let lastInlineCompletionId = undefined;\n    this._register(autorun('play audio cue & read suggestion', reader => {\n      const model = this.model.read(reader);\n      const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n      if (!model || !state || !state.inlineCompletion) {\n        lastInlineCompletionId = undefined;\n        return;\n      }\n      if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n        lastInlineCompletionId = state.inlineCompletion.semanticId;\n        const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n        this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n          if (this.editor.getOption(7 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            alert(state.ghostText.renderForScreenReader(lineText));\n          }\n        });\n      }\n    }));\n    this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n  }\n  /**\n   * Copies over the relevant state from the text model to observables.\n   * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n   * regardless of who calls into us.\n   */\n  updateObservables(tx, changeReason) {\n    var _a, _b;\n    const newModel = this.editor.getModel();\n    this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n    this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n  }\n  shouldShowHoverAt(range) {\n    var _a;\n    const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n    if (ghostText) {\n      return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n    }\n    return false;\n  }\n  shouldShowHoverAtViewZone(viewZoneId) {\n    return this.ghostTextWidget.ownsViewZone(viewZoneId);\n  }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = __decorate([__param(1, IInstantiationService), __param(2, IContextKeyService), __param(3, IConfigurationService), __param(4, ICommandService), __param(5, ILanguageFeatureDebounceService), __param(6, ILanguageFeaturesService), __param(7, IAudioCueService)], InlineCompletionsController);\nexport { InlineCompletionsController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","alert","Event","Disposable","toDisposable","autorun","constObservable","observableFromEvent","observableValue","disposableObservableValue","transaction","CoreEditingCommands","Position","ILanguageFeatureDebounceService","ILanguageFeaturesService","inlineSuggestCommitId","GhostTextWidget","InlineCompletionContextKeys","InlineCompletionsHintsWidget","InlineSuggestionHintsContentWidget","InlineCompletionsModel","VersionIdChangeReason","SuggestWidgetAdaptor","AudioCue","IAudioCueService","ICommandService","IConfigurationService","IContextKeyService","IInstantiationService","InlineCompletionsController","get","editor","getContribution","ID","constructor","instantiationService","contextKeyService","configurationService","commandService","debounceService","languageFeaturesService","audioCueService","model","undefined","textModelVersionId","cursorPosition","suggestWidgetAdaptor","_register","_a","_b","selectedInlineCompletion","toSingleTextEdit","tx","updateObservables","Other","_enabled","onDidChangeConfiguration","getOption","enabled","ghostTextWidget","createInstance","ghostText","map","v","reader","read","minReservedLineCount","targetTextModel","textModel","_debounceValue","for","inlineCompletionsProvider","min","max","runAndSubscribe","onDidChangeModel","set","getModel","selectedItem","preview","previewMode","mode","getReason","e","isUndoing","Undo","isRedoing","Redo","isAcceptingPartially","AcceptWord","onDidChangeModelContent","onDidChangeCursorPosition","reason","stop","onDidType","trigger","onDidExecuteCommand","commands","Set","Tab","id","DeleteLeft","DeleteRight","has","commandId","hasTextFocus","onDidBlurEditorWidget","getValue","keepOnBlur","dropDownVisible","state","suggestItem","lineCount","forceRenderingAbove","stopForceRenderingAbove","lastInlineCompletionId","inlineCompletion","semanticId","lineText","getLineContent","lineNumber","playAudioCue","inlineSuggestion","then","renderForScreenReader","changeReason","newModel","getVersionId","getPosition","shouldShowHoverAt","range","parts","some","p","containsPosition","column","shouldShowHoverAtViewZone","viewZoneId","ownsViewZone"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController.ID);\n    }\n    constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.debounceService = debounceService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.audioCueService = audioCueService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this.textModelVersionId = observableValue('textModelVersionId', -1);\n        this.cursorPosition = observableValue('cursorPosition', new Position(1, 1));\n        this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other)));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).enabled);\n        this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n        this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n            /** @description onDidChangeModel */\n            this.model.set(undefined, tx);\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            const textModel = editor.getModel();\n            if (textModel) {\n                const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(61 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                this.model.set(model, tx);\n            }\n        })));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this.commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(61 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun('forceRenderingAbove', reader => {\n            var _a;\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this.suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this.suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorun('play audio cue & read suggestion', reader => {\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(7 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        alert(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this.ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}