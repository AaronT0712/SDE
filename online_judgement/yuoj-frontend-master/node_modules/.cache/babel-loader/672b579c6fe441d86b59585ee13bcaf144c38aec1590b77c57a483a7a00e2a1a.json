{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { $, append, clearNode, createStyleSheet, h, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { unthemedInboxStyles } from '../inputbox/inputBox.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isButton, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { Toggle, unthemedToggleStyles } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n  constructor(data) {\n    super(data.elements.map(node => node.element));\n    this.data = data;\n  }\n}\nfunction asTreeDragAndDropData(data) {\n  if (data instanceof ElementsDragAndDropData) {\n    return new TreeElementsDragAndDropData(data);\n  }\n  return data;\n}\nclass TreeNodeListDragAndDrop {\n  constructor(modelProvider, dnd) {\n    this.modelProvider = modelProvider;\n    this.dnd = dnd;\n    this.autoExpandDisposable = Disposable.None;\n  }\n  getDragURI(node) {\n    return this.dnd.getDragURI(node.element);\n  }\n  getDragLabel(nodes, originalEvent) {\n    if (this.dnd.getDragLabel) {\n      return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n    }\n    return undefined;\n  }\n  onDragStart(data, originalEvent) {\n    var _a, _b;\n    (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n  }\n  onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n    const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n    if (didChangeAutoExpandNode) {\n      this.autoExpandDisposable.dispose();\n      this.autoExpandNode = targetNode;\n    }\n    if (typeof targetNode === 'undefined') {\n      return result;\n    }\n    if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n      this.autoExpandDisposable = disposableTimeout(() => {\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        if (model.isCollapsed(ref)) {\n          model.setCollapsed(ref, false);\n        }\n        this.autoExpandNode = undefined;\n      }, 500);\n    }\n    if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n      if (!raw) {\n        const accept = typeof result === 'boolean' ? result : result.accept;\n        const effect = typeof result === 'boolean' ? undefined : result.effect;\n        return {\n          accept,\n          effect,\n          feedback: [targetIndex]\n        };\n      }\n      return result;\n    }\n    if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n      const model = this.modelProvider();\n      const ref = model.getNodeLocation(targetNode);\n      const parentRef = model.getParentNodeLocation(ref);\n      const parentNode = model.getNode(parentRef);\n      const parentIndex = parentRef && model.getListIndex(parentRef);\n      return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n    }\n    const model = this.modelProvider();\n    const ref = model.getNodeLocation(targetNode);\n    const start = model.getListIndex(ref);\n    const length = model.getListRenderCount(ref);\n    return Object.assign(Object.assign({}, result), {\n      feedback: range(start, start + length)\n    });\n  }\n  drop(data, targetNode, targetIndex, originalEvent) {\n    this.autoExpandDisposable.dispose();\n    this.autoExpandNode = undefined;\n    this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n  }\n  onDragEnd(originalEvent) {\n    var _a, _b;\n    (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n  }\n}\nfunction asListOptions(modelProvider, options) {\n  return options && Object.assign(Object.assign({}, options), {\n    identityProvider: options.identityProvider && {\n      getId(el) {\n        return options.identityProvider.getId(el.element);\n      }\n    },\n    dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n    multipleSelectionController: options.multipleSelectionController && {\n      isSelectionSingleChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      },\n      isSelectionRangeChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      }\n    },\n    accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), {\n      getSetSize(node) {\n        const model = modelProvider();\n        const ref = model.getNodeLocation(node);\n        const parentRef = model.getParentNodeLocation(ref);\n        const parentNode = model.getNode(parentRef);\n        return parentNode.visibleChildrenCount;\n      },\n      getPosInSet(node) {\n        return node.visibleChildIndex + 1;\n      },\n      isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? node => {\n        return options.accessibilityProvider.isChecked(node.element);\n      } : undefined,\n      getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? node => {\n        return options.accessibilityProvider.getRole(node.element);\n      } : () => 'treeitem',\n      getAriaLabel(e) {\n        return options.accessibilityProvider.getAriaLabel(e.element);\n      },\n      getWidgetAriaLabel() {\n        return options.accessibilityProvider.getWidgetAriaLabel();\n      },\n      getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n      getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? node => options.accessibilityProvider.getAriaLevel(node.element) : node => {\n        return node.depth;\n      },\n      getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n        return options.accessibilityProvider.getActiveDescendantId(node.element);\n      })\n    }),\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), {\n      getKeyboardNavigationLabel(node) {\n        return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n      }\n    })\n  });\n}\nexport class ComposedTreeDelegate {\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  getHeight(element) {\n    return this.delegate.getHeight(element.element);\n  }\n  getTemplateId(element) {\n    return this.delegate.getTemplateId(element.element);\n  }\n  hasDynamicHeight(element) {\n    return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n  }\n  setDynamicHeight(element, height) {\n    var _a, _b;\n    (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n  }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n  RenderIndentGuides[\"None\"] = \"none\";\n  RenderIndentGuides[\"OnHover\"] = \"onHover\";\n  RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n  get elements() {\n    return this._elements;\n  }\n  constructor(onDidChange, _elements = []) {\n    this._elements = _elements;\n    this.disposables = new DisposableStore();\n    this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n  }\n  dispose() {\n    this.disposables.dispose();\n  }\n}\nclass TreeRenderer {\n  constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, renderedIndentGuides, options = {}) {\n    var _a;\n    this.renderer = renderer;\n    this.modelProvider = modelProvider;\n    this.activeNodes = activeNodes;\n    this.renderedIndentGuides = renderedIndentGuides;\n    this.renderedElements = new Map();\n    this.renderedNodes = new Map();\n    this.indent = TreeRenderer.DefaultIndent;\n    this.hideTwistiesOfChildlessElements = false;\n    this.shouldRenderIndentGuides = false;\n    this.activeIndentNodes = new Set();\n    this.indentGuidesDisposable = Disposable.None;\n    this.disposables = new DisposableStore();\n    this.templateId = renderer.templateId;\n    this.updateOptions(options);\n    Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n    (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n  }\n  updateOptions(options = {}) {\n    if (typeof options.indent !== 'undefined') {\n      const indent = clamp(options.indent, 0, 40);\n      if (indent !== this.indent) {\n        this.indent = indent;\n        for (const [node, templateData] of this.renderedNodes) {\n          this.renderTreeElement(node, templateData);\n        }\n      }\n    }\n    if (typeof options.renderIndentGuides !== 'undefined') {\n      const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n      if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n        this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n        for (const [node, templateData] of this.renderedNodes) {\n          this._renderIndentGuides(node, templateData);\n        }\n        this.indentGuidesDisposable.dispose();\n        if (shouldRenderIndentGuides) {\n          const disposables = new DisposableStore();\n          this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n          this.indentGuidesDisposable = disposables;\n          this._onDidChangeActiveNodes(this.activeNodes.elements);\n        }\n      }\n    }\n    if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n      this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n    }\n  }\n  renderTemplate(container) {\n    const el = append(container, $('.monaco-tl-row'));\n    const indent = append(el, $('.monaco-tl-indent'));\n    const twistie = append(el, $('.monaco-tl-twistie'));\n    const contents = append(el, $('.monaco-tl-contents'));\n    const templateData = this.renderer.renderTemplate(contents);\n    return {\n      container,\n      indent,\n      twistie,\n      indentGuidesDisposable: Disposable.None,\n      templateData\n    };\n  }\n  renderElement(node, index, templateData, height) {\n    this.renderedNodes.set(node, templateData);\n    this.renderedElements.set(node.element, node);\n    this.renderTreeElement(node, templateData);\n    this.renderer.renderElement(node, index, templateData.templateData, height);\n  }\n  disposeElement(node, index, templateData, height) {\n    var _a, _b;\n    templateData.indentGuidesDisposable.dispose();\n    (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n    if (typeof height === 'number') {\n      this.renderedNodes.delete(node);\n      this.renderedElements.delete(node.element);\n    }\n  }\n  disposeTemplate(templateData) {\n    this.renderer.disposeTemplate(templateData.templateData);\n  }\n  onDidChangeTwistieState(element) {\n    const node = this.renderedElements.get(element);\n    if (!node) {\n      return;\n    }\n    this.onDidChangeNodeTwistieState(node);\n  }\n  onDidChangeNodeTwistieState(node) {\n    const templateData = this.renderedNodes.get(node);\n    if (!templateData) {\n      return;\n    }\n    this._onDidChangeActiveNodes(this.activeNodes.elements);\n    this.renderTreeElement(node, templateData);\n  }\n  renderTreeElement(node, templateData) {\n    const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n    templateData.twistie.style.paddingLeft = `${indent}px`;\n    templateData.indent.style.width = `${indent + this.indent - 16}px`;\n    if (node.collapsible) {\n      templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n    } else {\n      templateData.container.removeAttribute('aria-expanded');\n    }\n    templateData.twistie.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n    let twistieRendered = false;\n    if (this.renderer.renderTwistie) {\n      twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n    }\n    if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n      if (!twistieRendered) {\n        templateData.twistie.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n      }\n      templateData.twistie.classList.add('collapsible');\n      templateData.twistie.classList.toggle('collapsed', node.collapsed);\n    } else {\n      templateData.twistie.classList.remove('collapsible', 'collapsed');\n    }\n    this._renderIndentGuides(node, templateData);\n  }\n  _renderIndentGuides(node, templateData) {\n    clearNode(templateData.indent);\n    templateData.indentGuidesDisposable.dispose();\n    if (!this.shouldRenderIndentGuides) {\n      return;\n    }\n    const disposableStore = new DisposableStore();\n    const model = this.modelProvider();\n    while (true) {\n      const ref = model.getNodeLocation(node);\n      const parentRef = model.getParentNodeLocation(ref);\n      if (!parentRef) {\n        break;\n      }\n      const parent = model.getNode(parentRef);\n      const guide = $('.indent-guide', {\n        style: `width: ${this.indent}px`\n      });\n      if (this.activeIndentNodes.has(parent)) {\n        guide.classList.add('active');\n      }\n      if (templateData.indent.childElementCount === 0) {\n        templateData.indent.appendChild(guide);\n      } else {\n        templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n      }\n      this.renderedIndentGuides.add(parent, guide);\n      disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n      node = parent;\n    }\n    templateData.indentGuidesDisposable = disposableStore;\n  }\n  _onDidChangeActiveNodes(nodes) {\n    if (!this.shouldRenderIndentGuides) {\n      return;\n    }\n    const set = new Set();\n    const model = this.modelProvider();\n    nodes.forEach(node => {\n      const ref = model.getNodeLocation(node);\n      try {\n        const parentRef = model.getParentNodeLocation(ref);\n        if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n          set.add(node);\n        } else if (parentRef) {\n          set.add(model.getNode(parentRef));\n        }\n      } catch (_a) {\n        // noop\n      }\n    });\n    this.activeIndentNodes.forEach(node => {\n      if (!set.has(node)) {\n        this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n      }\n    });\n    set.forEach(node => {\n      if (!this.activeIndentNodes.has(node)) {\n        this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n      }\n    });\n    this.activeIndentNodes = set;\n  }\n  dispose() {\n    this.renderedNodes.clear();\n    this.renderedElements.clear();\n    this.indentGuidesDisposable.dispose();\n    dispose(this.disposables);\n  }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n  get totalCount() {\n    return this._totalCount;\n  }\n  get matchCount() {\n    return this._matchCount;\n  }\n  constructor(tree, keyboardNavigationLabelProvider, _filter) {\n    this.tree = tree;\n    this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n    this._filter = _filter;\n    this._totalCount = 0;\n    this._matchCount = 0;\n    this._pattern = '';\n    this._lowercasePattern = '';\n    this.disposables = new DisposableStore();\n    tree.onWillRefilter(this.reset, this, this.disposables);\n  }\n  filter(element, parentVisibility) {\n    let visibility = 1 /* TreeVisibility.Visible */;\n    if (this._filter) {\n      const result = this._filter.filter(element, parentVisibility);\n      if (typeof result === 'boolean') {\n        visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n      } else if (isFilterResult(result)) {\n        visibility = getVisibleState(result.visibility);\n      } else {\n        visibility = result;\n      }\n      if (visibility === 0 /* TreeVisibility.Hidden */) {\n        return false;\n      }\n    }\n    this._totalCount++;\n    if (!this._pattern) {\n      this._matchCount++;\n      return {\n        data: FuzzyScore.Default,\n        visibility\n      };\n    }\n    const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n    const labels = Array.isArray(label) ? label : [label];\n    for (const l of labels) {\n      const labelStr = l && l.toString();\n      if (typeof labelStr === 'undefined') {\n        return {\n          data: FuzzyScore.Default,\n          visibility\n        };\n      }\n      let score;\n      if (this.tree.findMatchType === TreeFindMatchType.Contiguous) {\n        const index = labelStr.toLowerCase().indexOf(this._lowercasePattern);\n        if (index > -1) {\n          score = [Number.MAX_SAFE_INTEGER, 0];\n          for (let i = this._lowercasePattern.length; i > 0; i--) {\n            score.push(index + i - 1);\n          }\n        }\n      } else {\n        score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, {\n          firstMatchCanBeWeak: true,\n          boostFullMatch: true\n        });\n      }\n      if (score) {\n        this._matchCount++;\n        return labels.length === 1 ? {\n          data: score,\n          visibility\n        } : {\n          data: {\n            label: labelStr,\n            score: score\n          },\n          visibility\n        };\n      }\n    }\n    if (this.tree.findMode === TreeFindMode.Filter) {\n      if (typeof this.tree.options.defaultFindVisibility === 'number') {\n        return this.tree.options.defaultFindVisibility;\n      } else if (this.tree.options.defaultFindVisibility) {\n        return this.tree.options.defaultFindVisibility(element);\n      } else {\n        return 2 /* TreeVisibility.Recurse */;\n      }\n    } else {\n      return {\n        data: FuzzyScore.Default,\n        visibility\n      };\n    }\n  }\n  reset() {\n    this._totalCount = 0;\n    this._matchCount = 0;\n  }\n  dispose() {\n    dispose(this.disposables);\n  }\n}\nexport class ModeToggle extends Toggle {\n  constructor(opts) {\n    var _a;\n    super({\n      icon: Codicon.listFilter,\n      title: localize('filter', \"Filter\"),\n      isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    });\n  }\n}\nexport class FuzzyToggle extends Toggle {\n  constructor(opts) {\n    var _a;\n    super({\n      icon: Codicon.searchFuzzy,\n      title: localize('fuzzySearch', \"Fuzzy Match\"),\n      isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n      inputActiveOptionBorder: opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts.inputActiveOptionBackground\n    });\n  }\n}\nconst unthemedFindWidgetStyles = {\n  inputBoxStyles: unthemedInboxStyles,\n  toggleStyles: unthemedToggleStyles,\n  listFilterWidgetBackground: undefined,\n  listFilterWidgetNoMatchesOutline: undefined,\n  listFilterWidgetOutline: undefined,\n  listFilterWidgetShadow: undefined\n};\nexport var TreeFindMode;\n(function (TreeFindMode) {\n  TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n  TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nexport var TreeFindMatchType;\n(function (TreeFindMatchType) {\n  TreeFindMatchType[TreeFindMatchType[\"Fuzzy\"] = 0] = \"Fuzzy\";\n  TreeFindMatchType[TreeFindMatchType[\"Contiguous\"] = 1] = \"Contiguous\";\n})(TreeFindMatchType || (TreeFindMatchType = {}));\nclass FindWidget extends Disposable {\n  set mode(mode) {\n    this.modeToggle.checked = mode === TreeFindMode.Filter;\n    this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n  }\n  set matchType(matchType) {\n    this.matchTypeToggle.checked = matchType === TreeFindMatchType.Fuzzy;\n  }\n  constructor(container, tree, contextViewProvider, mode, matchType, options) {\n    var _a;\n    super();\n    this.tree = tree;\n    this.elements = h('.monaco-tree-type-filter', [h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', {\n      tabIndex: 0\n    }), h('.monaco-tree-type-filter-input@findInput'), h('.monaco-tree-type-filter-actionbar@actionbar')]);\n    this.width = 0;\n    this.right = 0;\n    this.top = 0;\n    this._onDidDisable = new Emitter();\n    container.appendChild(this.elements.root);\n    this._register(toDisposable(() => container.removeChild(this.elements.root)));\n    const styles = (_a = options === null || options === void 0 ? void 0 : options.styles) !== null && _a !== void 0 ? _a : unthemedFindWidgetStyles;\n    if (styles.listFilterWidgetBackground) {\n      this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground;\n    }\n    if (styles.listFilterWidgetShadow) {\n      this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n    }\n    this.modeToggle = this._register(new ModeToggle(Object.assign(Object.assign({}, styles.toggleStyles), {\n      isChecked: mode === TreeFindMode.Filter\n    })));\n    this.matchTypeToggle = this._register(new FuzzyToggle(Object.assign(Object.assign({}, styles.toggleStyles), {\n      isChecked: matchType === TreeFindMatchType.Fuzzy\n    })));\n    this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n    this.onDidChangeMatchType = Event.map(this.matchTypeToggle.onChange, () => this.matchTypeToggle.checked ? TreeFindMatchType.Fuzzy : TreeFindMatchType.Contiguous, this._store);\n    this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, {\n      label: localize('type to search', \"Type to search\"),\n      additionalToggles: [this.modeToggle, this.matchTypeToggle],\n      showCommonFindToggles: false,\n      inputBoxStyles: styles.inputBoxStyles,\n      toggleStyles: styles.toggleStyles,\n      history: options === null || options === void 0 ? void 0 : options.history\n    }));\n    this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n    this.mode = mode;\n    const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n    const onKeyDown = this._register(Event.chain(emitter.event)).map(e => new StandardKeyboardEvent(e)).event;\n    this._register(onKeyDown(e => {\n      // Using equals() so we reserve modified keys for future use\n      if (e.equals(3 /* KeyCode.Enter */)) {\n        // This is the only keyboard way to return to the tree from a history item that isn't the last one\n        e.preventDefault();\n        e.stopPropagation();\n        this.findInput.inputBox.addToHistory();\n        this.tree.domFocus();\n        return;\n      }\n      if (e.equals(18 /* KeyCode.DownArrow */)) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.findInput.inputBox.isAtLastInHistory() || this.findInput.inputBox.isNowhereInHistory()) {\n          // Retain original pre-history DownArrow behavior\n          this.findInput.inputBox.addToHistory();\n          this.tree.domFocus();\n        } else {\n          // Downward through history\n          this.findInput.inputBox.showNextValue();\n        }\n        return;\n      }\n      if (e.equals(16 /* KeyCode.UpArrow */)) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Upward through history\n        this.findInput.inputBox.showPreviousValue();\n        return;\n      }\n    }));\n    const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n    this.actionbar.push(closeAction, {\n      icon: true,\n      label: false\n    });\n    const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n    this._register(onGrabMouseDown.event(e => {\n      const disposables = new DisposableStore();\n      const onWindowMouseMove = disposables.add(new DomEmitter(window, 'mousemove'));\n      const onWindowMouseUp = disposables.add(new DomEmitter(window, 'mouseup'));\n      const startRight = this.right;\n      const startX = e.pageX;\n      const startTop = this.top;\n      const startY = e.pageY;\n      this.elements.grab.classList.add('grabbing');\n      const transition = this.elements.root.style.transition;\n      this.elements.root.style.transition = 'unset';\n      const update = e => {\n        const deltaX = e.pageX - startX;\n        this.right = startRight - deltaX;\n        const deltaY = e.pageY - startY;\n        this.top = startTop + deltaY;\n        this.layout();\n      };\n      disposables.add(onWindowMouseMove.event(update));\n      disposables.add(onWindowMouseUp.event(e => {\n        update(e);\n        this.elements.grab.classList.remove('grabbing');\n        this.elements.root.style.transition = transition;\n        disposables.dispose();\n      }));\n    }));\n    const onGrabKeyDown = this._register(Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event)).map(e => new StandardKeyboardEvent(e)).event;\n    this._register(onGrabKeyDown(e => {\n      let right;\n      let top;\n      if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n        right = Number.POSITIVE_INFINITY;\n      } else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n        right = 0;\n      } else if (e.keyCode === 10 /* KeyCode.Space */) {\n        right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n      }\n      if (e.keyCode === 16 /* KeyCode.UpArrow */) {\n        top = 0;\n      } else if (e.keyCode === 18 /* KeyCode.DownArrow */) {\n        top = Number.POSITIVE_INFINITY;\n      }\n      if (right !== undefined) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.right = right;\n        this.layout();\n      }\n      if (top !== undefined) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.top = top;\n        const transition = this.elements.root.style.transition;\n        this.elements.root.style.transition = 'unset';\n        this.layout();\n        setTimeout(() => {\n          this.elements.root.style.transition = transition;\n        }, 0);\n      }\n    }));\n    this.onDidChangeValue = this.findInput.onDidChange;\n  }\n  layout(width = this.width) {\n    this.width = width;\n    this.right = clamp(this.right, 0, Math.max(0, width - 212));\n    this.elements.root.style.right = `${this.right}px`;\n    this.top = clamp(this.top, 0, 24);\n    this.elements.root.style.top = `${this.top}px`;\n  }\n  showMessage(message) {\n    this.findInput.showMessage(message);\n  }\n  clearMessage() {\n    this.findInput.clearMessage();\n  }\n  dispose() {\n    const _super = Object.create(null, {\n      dispose: {\n        get: () => super.dispose\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      this._onDidDisable.fire();\n      this.elements.root.classList.add('disabled');\n      yield timeout(300);\n      _super.dispose.call(this);\n    });\n  }\n}\nclass FindController {\n  get pattern() {\n    return this._pattern;\n  }\n  get mode() {\n    return this._mode;\n  }\n  set mode(mode) {\n    if (mode === this._mode) {\n      return;\n    }\n    this._mode = mode;\n    if (this.widget) {\n      this.widget.mode = this._mode;\n    }\n    this.tree.refilter();\n    this.render();\n    this._onDidChangeMode.fire(mode);\n  }\n  get matchType() {\n    return this._matchType;\n  }\n  set matchType(matchType) {\n    if (matchType === this._matchType) {\n      return;\n    }\n    this._matchType = matchType;\n    if (this.widget) {\n      this.widget.matchType = this._matchType;\n    }\n    this.tree.refilter();\n    this.render();\n    this._onDidChangeMatchType.fire(matchType);\n  }\n  constructor(tree, model, view, filter, contextViewProvider, options = {}) {\n    var _a, _b;\n    this.tree = tree;\n    this.view = view;\n    this.filter = filter;\n    this.contextViewProvider = contextViewProvider;\n    this.options = options;\n    this._pattern = '';\n    this.width = 0;\n    this._onDidChangeMode = new Emitter();\n    this.onDidChangeMode = this._onDidChangeMode.event;\n    this._onDidChangeMatchType = new Emitter();\n    this.onDidChangeMatchType = this._onDidChangeMatchType.event;\n    this._onDidChangePattern = new Emitter();\n    this._onDidChangeOpenState = new Emitter();\n    this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n    this.enabledDisposables = new DisposableStore();\n    this.disposables = new DisposableStore();\n    this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n    this._matchType = (_b = tree.options.defaultFindMatchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n    model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n  }\n  updateOptions(optionsUpdate = {}) {\n    if (optionsUpdate.defaultFindMode !== undefined) {\n      this.mode = optionsUpdate.defaultFindMode;\n    }\n    if (optionsUpdate.defaultFindMatchType !== undefined) {\n      this.matchType = optionsUpdate.defaultFindMatchType;\n    }\n  }\n  onDidSpliceModel() {\n    if (!this.widget || this.pattern.length === 0) {\n      return;\n    }\n    this.tree.refilter();\n    this.render();\n  }\n  render() {\n    var _a, _b, _c, _d;\n    const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n    if (this.pattern && noMatches) {\n      if ((_a = this.tree.options.showNotFoundMessage) !== null && _a !== void 0 ? _a : true) {\n        (_b = this.widget) === null || _b === void 0 ? void 0 : _b.showMessage({\n          type: 2 /* MessageType.WARNING */,\n          content: localize('not found', \"No elements found.\")\n        });\n      } else {\n        (_c = this.widget) === null || _c === void 0 ? void 0 : _c.showMessage({\n          type: 2 /* MessageType.WARNING */\n        });\n      }\n    } else {\n      (_d = this.widget) === null || _d === void 0 ? void 0 : _d.clearMessage();\n    }\n  }\n  shouldAllowFocus(node) {\n    if (!this.widget || !this.pattern || this._mode === TreeFindMode.Filter) {\n      return true;\n    }\n    if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n      return true;\n    }\n    return !FuzzyScore.isDefault(node.filterData);\n  }\n  layout(width) {\n    var _a;\n    this.width = width;\n    (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n  }\n  dispose() {\n    this._history = undefined;\n    this._onDidChangePattern.dispose();\n    this.enabledDisposables.dispose();\n    this.disposables.dispose();\n  }\n}\nfunction asTreeMouseEvent(event) {\n  let target = TreeMouseEventTarget.Unknown;\n  if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Twistie;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Element;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n    target = TreeMouseEventTarget.Filter;\n  }\n  return {\n    browserEvent: event.browserEvent,\n    element: event.element ? event.element.element : null,\n    target\n  };\n}\nfunction dfs(node, fn) {\n  fn(node);\n  node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n  get nodeSet() {\n    if (!this._nodeSet) {\n      this._nodeSet = this.createNodeSet();\n    }\n    return this._nodeSet;\n  }\n  constructor(getFirstViewElementWithTrait, identityProvider) {\n    this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n    this.identityProvider = identityProvider;\n    this.nodes = [];\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n  }\n  set(nodes, browserEvent) {\n    if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n      return;\n    }\n    this._set(nodes, false, browserEvent);\n  }\n  _set(nodes, silent, browserEvent) {\n    this.nodes = [...nodes];\n    this.elements = undefined;\n    this._nodeSet = undefined;\n    if (!silent) {\n      const that = this;\n      this._onDidChange.fire({\n        get elements() {\n          return that.get();\n        },\n        browserEvent\n      });\n    }\n  }\n  get() {\n    if (!this.elements) {\n      this.elements = this.nodes.map(node => node.element);\n    }\n    return [...this.elements];\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  has(node) {\n    return this.nodeSet.has(node);\n  }\n  onDidModelSplice({\n    insertedNodes,\n    deletedNodes\n  }) {\n    if (!this.identityProvider) {\n      const set = this.createNodeSet();\n      const visit = node => set.delete(node);\n      deletedNodes.forEach(node => dfs(node, visit));\n      this.set([...set.values()]);\n      return;\n    }\n    const deletedNodesIdSet = new Set();\n    const deletedNodesVisitor = node => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n    deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n    const insertedNodesMap = new Map();\n    const insertedNodesVisitor = node => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n    insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n    const nodes = [];\n    for (const node of this.nodes) {\n      const id = this.identityProvider.getId(node.element).toString();\n      const wasDeleted = deletedNodesIdSet.has(id);\n      if (!wasDeleted) {\n        nodes.push(node);\n      } else {\n        const insertedNode = insertedNodesMap.get(id);\n        if (insertedNode && insertedNode.visible) {\n          nodes.push(insertedNode);\n        }\n      }\n    }\n    if (this.nodes.length > 0 && nodes.length === 0) {\n      const node = this.getFirstViewElementWithTrait();\n      if (node) {\n        nodes.push(node);\n      }\n    }\n    this._set(nodes, true);\n  }\n  createNodeSet() {\n    const set = new Set();\n    for (const node of this.nodes) {\n      set.add(node);\n    }\n    return set;\n  }\n}\nclass TreeNodeListMouseController extends MouseController {\n  constructor(list, tree) {\n    super(list);\n    this.tree = tree;\n  }\n  onViewPointer(e) {\n    if (isButton(e.browserEvent.target) || isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\n      return;\n    }\n    if (e.browserEvent.isHandledByList) {\n      return;\n    }\n    const node = e.element;\n    if (!node) {\n      return super.onViewPointer(e);\n    }\n    if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n      return super.onViewPointer(e);\n    }\n    const target = e.browserEvent.target;\n    const onTwistie = target.classList.contains('monaco-tl-twistie') || target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16;\n    let expandOnlyOnTwistieClick = false;\n    if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n      expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n    } else {\n      expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n    }\n    if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n      return super.onViewPointer(e);\n    }\n    if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n      return super.onViewPointer(e);\n    }\n    if (node.collapsible) {\n      const location = this.tree.getNodeLocation(node);\n      const recursive = e.browserEvent.altKey;\n      this.tree.setFocus([location]);\n      this.tree.toggleCollapsed(location, recursive);\n      if (expandOnlyOnTwistieClick && onTwistie) {\n        // Do not set this before calling a handler on the super class, because it will reject it as handled\n        e.browserEvent.isHandledByList = true;\n        return;\n      }\n    }\n    super.onViewPointer(e);\n  }\n  onDoubleClick(e) {\n    const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n    if (onTwistie || !this.tree.expandOnDoubleClick) {\n      return;\n    }\n    if (e.browserEvent.isHandledByList) {\n      return;\n    }\n    super.onDoubleClick(e);\n  }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n  constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n    super(user, container, virtualDelegate, renderers, options);\n    this.focusTrait = focusTrait;\n    this.selectionTrait = selectionTrait;\n    this.anchorTrait = anchorTrait;\n  }\n  createMouseController(options) {\n    return new TreeNodeListMouseController(this, options.tree);\n  }\n  splice(start, deleteCount, elements = []) {\n    super.splice(start, deleteCount, elements);\n    if (elements.length === 0) {\n      return;\n    }\n    const additionalFocus = [];\n    const additionalSelection = [];\n    let anchor;\n    elements.forEach((node, index) => {\n      if (this.focusTrait.has(node)) {\n        additionalFocus.push(start + index);\n      }\n      if (this.selectionTrait.has(node)) {\n        additionalSelection.push(start + index);\n      }\n      if (this.anchorTrait.has(node)) {\n        anchor = start + index;\n      }\n    });\n    if (additionalFocus.length > 0) {\n      super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n    }\n    if (additionalSelection.length > 0) {\n      super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n    }\n    if (typeof anchor === 'number') {\n      super.setAnchor(anchor);\n    }\n  }\n  setFocus(indexes, browserEvent, fromAPI = false) {\n    super.setFocus(indexes, browserEvent);\n    if (!fromAPI) {\n      this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n    }\n  }\n  setSelection(indexes, browserEvent, fromAPI = false) {\n    super.setSelection(indexes, browserEvent);\n    if (!fromAPI) {\n      this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n    }\n  }\n  setAnchor(index, fromAPI = false) {\n    super.setAnchor(index);\n    if (!fromAPI) {\n      if (typeof index === 'undefined') {\n        this.anchorTrait.set([]);\n      } else {\n        this.anchorTrait.set([this.element(index)]);\n      }\n    }\n  }\n}\nexport class AbstractTree {\n  get onDidScroll() {\n    return this.view.onDidScroll;\n  }\n  get onDidChangeFocus() {\n    return this.eventBufferer.wrapEvent(this.focus.onDidChange);\n  }\n  get onDidChangeSelection() {\n    return this.eventBufferer.wrapEvent(this.selection.onDidChange);\n  }\n  get onMouseDblClick() {\n    return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter);\n  }\n  get onPointer() {\n    return Event.map(this.view.onPointer, asTreeMouseEvent);\n  }\n  get onDidFocus() {\n    return this.view.onDidFocus;\n  }\n  get onDidChangeModel() {\n    return Event.signal(this.model.onDidSplice);\n  }\n  get onDidChangeCollapseState() {\n    return this.model.onDidChangeCollapseState;\n  }\n  get findMode() {\n    var _a, _b;\n    return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight;\n  }\n  set findMode(findMode) {\n    if (this.findController) {\n      this.findController.mode = findMode;\n    }\n  }\n  get findMatchType() {\n    var _a, _b;\n    return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.matchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n  }\n  set findMatchType(findFuzzy) {\n    if (this.findController) {\n      this.findController.matchType = findFuzzy;\n    }\n  }\n  get expandOnDoubleClick() {\n    return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick;\n  }\n  get expandOnlyOnTwistieClick() {\n    return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick;\n  }\n  get onDidDispose() {\n    return this.view.onDidDispose;\n  }\n  constructor(_user, container, delegate, renderers, _options = {}) {\n    var _a;\n    this._user = _user;\n    this._options = _options;\n    this.eventBufferer = new EventBufferer();\n    this.onDidChangeFindOpenState = Event.None;\n    this.disposables = new DisposableStore();\n    this._onWillRefilter = new Emitter();\n    this.onWillRefilter = this._onWillRefilter.event;\n    this._onDidUpdateOptions = new Emitter();\n    const treeDelegate = new ComposedTreeDelegate(delegate);\n    const onDidChangeCollapseStateRelay = new Relay();\n    const onDidChangeActiveNodes = new Relay();\n    const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n    const renderedIndentGuides = new SetMap();\n    this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, renderedIndentGuides, _options));\n    for (const r of this.renderers) {\n      this.disposables.add(r);\n    }\n    let filter;\n    if (_options.keyboardNavigationLabelProvider) {\n      filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n      _options = Object.assign(Object.assign({}, _options), {\n        filter: filter\n      }); // TODO need typescript help here\n      this.disposables.add(filter);\n    }\n    this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n    this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n    this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n    this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), {\n      tree: this\n    }));\n    this.model = this.createModel(_user, this.view, _options);\n    onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n    const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n      this.eventBufferer.bufferEvents(() => {\n        this.focus.onDidModelSplice(e);\n        this.selection.onDidModelSplice(e);\n      });\n    }, this.disposables);\n    // Make sure the `forEach` always runs\n    onDidModelSplice(() => null, null, this.disposables);\n    // Active nodes can change when the model changes or when focus or selection change.\n    // We debounce it with 0 delay since these events may fire in the same stack and we only\n    // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n    // a nice to have UI feature.\n    onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)).debounce(() => null, 0).map(() => {\n      const set = new Set();\n      for (const node of this.focus.getNodes()) {\n        set.add(node);\n      }\n      for (const node of this.selection.getNodes()) {\n        set.add(node);\n      }\n      return [...set.values()];\n    }).event;\n    if (_options.keyboardSupport !== false) {\n      const onKeyDown = Event.chain(this.view.onKeyDown).filter(e => !isInputElement(e.target)).map(e => new StandardKeyboardEvent(e));\n      onKeyDown.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n      onKeyDown.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */).on(this.onRightArrow, this, this.disposables);\n      onKeyDown.filter(e => e.keyCode === 10 /* KeyCode.Space */).on(this.onSpace, this, this.disposables);\n    }\n    if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n      const opts = this.options.findWidgetStyles ? {\n        styles: this.options.findWidgetStyles\n      } : undefined;\n      this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider, opts);\n      this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n      this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n      this.disposables.add(this.findController);\n      this.onDidChangeFindMode = this.findController.onDidChangeMode;\n      this.onDidChangeFindMatchType = this.findController.onDidChangeMatchType;\n    } else {\n      this.onDidChangeFindMode = Event.None;\n      this.onDidChangeFindMatchType = Event.None;\n    }\n    this.styleElement = createStyleSheet(this.view.getHTMLElement());\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  updateOptions(optionsUpdate = {}) {\n    var _a;\n    this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n    for (const renderer of this.renderers) {\n      renderer.updateOptions(optionsUpdate);\n    }\n    this.view.updateOptions(this._options);\n    (_a = this.findController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n    this._onDidUpdateOptions.fire(this._options);\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  get options() {\n    return this._options;\n  }\n  // Widget\n  getHTMLElement() {\n    return this.view.getHTMLElement();\n  }\n  get scrollTop() {\n    return this.view.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this.view.scrollTop = scrollTop;\n  }\n  get scrollHeight() {\n    return this.view.scrollHeight;\n  }\n  get renderHeight() {\n    return this.view.renderHeight;\n  }\n  domFocus() {\n    this.view.domFocus();\n  }\n  layout(height, width) {\n    var _a;\n    this.view.layout(height, width);\n    if (isNumber(width)) {\n      (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n  }\n  style(styles) {\n    const suffix = `.${this.view.domId}`;\n    const content = [];\n    if (styles.treeIndentGuidesStroke) {\n      content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeInactiveIndentGuidesStroke}; }`);\n      content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n    }\n    this.styleElement.textContent = content.join('\\n');\n    this.view.style(styles);\n  }\n  // Tree navigation\n  getParentElement(location) {\n    const parentRef = this.model.getParentNodeLocation(location);\n    const parentNode = this.model.getNode(parentRef);\n    return parentNode.element;\n  }\n  getFirstElementChild(location) {\n    return this.model.getFirstElementChild(location);\n  }\n  // Tree\n  getNode(location) {\n    return this.model.getNode(location);\n  }\n  getNodeLocation(node) {\n    return this.model.getNodeLocation(node);\n  }\n  collapse(location, recursive = false) {\n    return this.model.setCollapsed(location, true, recursive);\n  }\n  expand(location, recursive = false) {\n    return this.model.setCollapsed(location, false, recursive);\n  }\n  toggleCollapsed(location, recursive = false) {\n    return this.model.setCollapsed(location, undefined, recursive);\n  }\n  isCollapsible(location) {\n    return this.model.isCollapsible(location);\n  }\n  setCollapsible(location, collapsible) {\n    return this.model.setCollapsible(location, collapsible);\n  }\n  isCollapsed(location) {\n    return this.model.isCollapsed(location);\n  }\n  refilter() {\n    this._onWillRefilter.fire(undefined);\n    this.model.refilter();\n  }\n  setSelection(elements, browserEvent) {\n    const nodes = elements.map(e => this.model.getNode(e));\n    this.selection.set(nodes, browserEvent);\n    const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n    this.view.setSelection(indexes, browserEvent, true);\n  }\n  getSelection() {\n    return this.selection.get();\n  }\n  setFocus(elements, browserEvent) {\n    const nodes = elements.map(e => this.model.getNode(e));\n    this.focus.set(nodes, browserEvent);\n    const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n    this.view.setFocus(indexes, browserEvent, true);\n  }\n  getFocus() {\n    return this.focus.get();\n  }\n  reveal(location, relativeTop) {\n    this.model.expandTo(location);\n    const index = this.model.getListIndex(location);\n    if (index === -1) {\n      return;\n    }\n    this.view.reveal(index, relativeTop);\n  }\n  // List\n  onLeftArrow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const didChange = this.model.setCollapsed(location, true);\n    if (!didChange) {\n      const parentLocation = this.model.getParentNodeLocation(location);\n      if (!parentLocation) {\n        return;\n      }\n      const parentListIndex = this.model.getListIndex(parentLocation);\n      this.view.reveal(parentListIndex);\n      this.view.setFocus([parentListIndex]);\n    }\n  }\n  onRightArrow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const didChange = this.model.setCollapsed(location, false);\n    if (!didChange) {\n      if (!node.children.some(child => child.visible)) {\n        return;\n      }\n      const [focusedIndex] = this.view.getFocus();\n      const firstChildIndex = focusedIndex + 1;\n      this.view.reveal(firstChildIndex);\n      this.view.setFocus([firstChildIndex]);\n    }\n  }\n  onSpace(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const recursive = e.browserEvent.altKey;\n    this.model.setCollapsed(location, undefined, recursive);\n  }\n  dispose() {\n    dispose(this.disposables);\n    this.view.dispose();\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","$","append","clearNode","createStyleSheet","h","hasParentWithClass","DomEmitter","StandardKeyboardEvent","ActionBar","FindInput","unthemedInboxStyles","ElementsDragAndDropData","isButton","isInputElement","isMonacoEditor","List","MouseController","Toggle","unthemedToggleStyles","getVisibleState","isFilterResult","TreeMouseEventTarget","Action","distinct","equals","range","disposableTimeout","timeout","Codicon","ThemeIcon","SetMap","Emitter","Event","EventBufferer","Relay","fuzzyScore","FuzzyScore","Disposable","DisposableStore","dispose","toDisposable","clamp","isNumber","localize","TreeElementsDragAndDropData","constructor","data","elements","map","node","element","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","None","getDragURI","getDragLabel","nodes","originalEvent","undefined","onDragStart","_a","_b","call","onDragOver","targetNode","targetIndex","raw","didChangeAutoExpandNode","autoExpandNode","autoExpand","model","ref","getNodeLocation","isCollapsed","setCollapsed","accept","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","start","length","getListRenderCount","Object","assign","drop","onDragEnd","asListOptions","options","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","ComposedTreeDelegate","delegate","getHeight","getTemplateId","hasDynamicHeight","setDynamicHeight","height","RenderIndentGuides","EventCollection","_elements","onDidChange","disposables","forEach","TreeRenderer","renderer","onDidChangeCollapseState","activeNodes","renderedIndentGuides","renderedElements","Map","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","activeIndentNodes","Set","indentGuidesDisposable","templateId","updateOptions","onDidChangeNodeTwistieState","onDidChangeTwistieState","templateData","renderTreeElement","renderIndentGuides","_renderIndentGuides","_onDidChangeActiveNodes","renderTemplate","container","twistie","contents","renderElement","index","set","disposeElement","delete","disposeTemplate","get","style","paddingLeft","width","collapsible","setAttribute","String","collapsed","removeAttribute","classList","remove","asClassNameArray","treeItemExpanded","twistieRendered","renderTwistie","add","toggle","disposableStore","parent","guide","has","childElementCount","appendChild","insertBefore","firstElementChild","children","line","clear","FindFilter","totalCount","_totalCount","matchCount","_matchCount","tree","_filter","_pattern","_lowercasePattern","onWillRefilter","reset","filter","parentVisibility","visibility","Default","label","labels","Array","isArray","l","labelStr","toString","score","findMatchType","TreeFindMatchType","Contiguous","toLowerCase","indexOf","Number","MAX_SAFE_INTEGER","i","push","firstMatchCanBeWeak","boostFullMatch","findMode","TreeFindMode","Filter","defaultFindVisibility","ModeToggle","opts","icon","listFilter","title","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","FuzzyToggle","searchFuzzy","unthemedFindWidgetStyles","inputBoxStyles","toggleStyles","listFilterWidgetBackground","listFilterWidgetNoMatchesOutline","listFilterWidgetOutline","listFilterWidgetShadow","FindWidget","mode","modeToggle","checked","findInput","inputBox","setPlaceHolder","matchType","matchTypeToggle","Fuzzy","contextViewProvider","tabIndex","right","top","_onDidDisable","root","_register","removeChild","styles","backgroundColor","boxShadow","onDidChangeMode","onChange","Highlight","_store","onDidChangeMatchType","additionalToggles","showCommonFindToggles","history","actionbar","emitter","inputElement","onKeyDown","chain","event","preventDefault","stopPropagation","addToHistory","domFocus","isAtLastInHistory","isNowhereInHistory","showNextValue","showPreviousValue","closeAction","onGrabMouseDown","grab","onWindowMouseMove","window","onWindowMouseUp","startRight","startX","pageX","startTop","startY","pageY","transition","update","deltaX","deltaY","layout","onGrabKeyDown","keyCode","POSITIVE_INFINITY","setTimeout","onDidChangeValue","Math","max","showMessage","message","clearMessage","_super","create","fire","FindController","pattern","_mode","widget","refilter","render","_onDidChangeMode","_matchType","_onDidChangeMatchType","view","_onDidChangePattern","_onDidChangeOpenState","onDidChangeOpenState","enabledDisposables","defaultFindMode","defaultFindMatchType","onDidSplice","onDidSpliceModel","optionsUpdate","_c","_d","noMatches","showNotFoundMessage","type","content","shouldAllowFocus","isDefault","filterData","_history","asTreeMouseEvent","target","Unknown","browserEvent","Twistie","Element","dfs","fn","child","Trait","nodeSet","_nodeSet","createNodeSet","getFirstViewElementWithTrait","_onDidChange","__forceEvent","_set","silent","that","getNodes","onDidModelSplice","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","wasDeleted","insertedNode","visible","TreeNodeListMouseController","list","onViewPointer","isHandledByList","onTwistie","contains","offsetX","expandOnlyOnTwistieClick","detail","expandOnDoubleClick","location","recursive","altKey","setFocus","toggleCollapsed","onDoubleClick","TreeNodeList","user","virtualDelegate","renderers","focusTrait","selectionTrait","anchorTrait","createMouseController","splice","deleteCount","additionalFocus","additionalSelection","anchor","getFocus","setSelection","getSelection","setAnchor","indexes","fromAPI","AbstractTree","onDidScroll","onDidChangeFocus","eventBufferer","wrapEvent","focus","onDidChangeSelection","selection","onMouseDblClick","onPointer","onDidFocus","onDidChangeModel","signal","findController","findFuzzy","_options","onDidDispose","_user","onDidChangeFindOpenState","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","onDidChangeActiveNodes","r","getFocusedElements","getSelectedElements","getAnchorElement","createModel","input","bufferEvents","any","debounce","keyboardSupport","on","onLeftArrow","onRightArrow","onSpace","findWidgetEnabled","findWidgetStyles","focusNavigationFilter","onDidChangeFindMode","onDidChangeFindMatchType","styleElement","getHTMLElement","Always","scrollTop","scrollHeight","renderHeight","suffix","domId","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","textContent","join","getParentElement","getFirstElementChild","collapse","expand","isCollapsible","setCollapsible","reveal","relativeTop","expandTo","didChange","parentLocation","parentListIndex","some","focusedIndex","firstChildIndex"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, append, clearNode, createStyleSheet, h, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { unthemedInboxStyles } from '../inputbox/inputBox.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isButton, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { Toggle, unthemedToggleStyles } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem', getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            } }) });\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        var _a, _b;\n        (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    get elements() {\n        return this._elements;\n    }\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nclass TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, renderedIndentGuides, options = {}) {\n        var _a;\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedIndentGuides = renderedIndentGuides;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            const indent = clamp(options.indent, 0, 40);\n            if (indent !== this.indent) {\n                this.indent = indent;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this.renderTreeElement(node, templateData);\n                }\n            }\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this._renderIndentGuides(node, templateData);\n                }\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderedNodes.set(node, templateData);\n        this.renderedElements.set(node.element, node);\n        this.renderTreeElement(node, templateData);\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        templateData.indentGuidesDisposable.dispose();\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const templateData = this.renderedNodes.get(node);\n        if (!templateData) {\n            return;\n        }\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderTreeElement(node, templateData);\n    }\n    renderTreeElement(node, templateData) {\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n        templateData.twistie.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        this._renderIndentGuides(node, templateData);\n    }\n    _renderIndentGuides(node, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            let score;\n            if (this.tree.findMatchType === TreeFindMatchType.Contiguous) {\n                const index = labelStr.toLowerCase().indexOf(this._lowercasePattern);\n                if (index > -1) {\n                    score = [Number.MAX_SAFE_INTEGER, 0];\n                    for (let i = this._lowercasePattern.length; i > 0; i--) {\n                        score.push(index + i - 1);\n                    }\n                }\n            }\n            else {\n                score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            }\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            if (typeof this.tree.options.defaultFindVisibility === 'number') {\n                return this.tree.options.defaultFindVisibility;\n            }\n            else if (this.tree.options.defaultFindVisibility) {\n                return this.tree.options.defaultFindVisibility(element);\n            }\n            else {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        var _a;\n        super({\n            icon: Codicon.listFilter,\n            title: localize('filter', \"Filter\"),\n            isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nexport class FuzzyToggle extends Toggle {\n    constructor(opts) {\n        var _a;\n        super({\n            icon: Codicon.searchFuzzy,\n            title: localize('fuzzySearch', \"Fuzzy Match\"),\n            isChecked: (_a = opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nconst unthemedFindWidgetStyles = {\n    inputBoxStyles: unthemedInboxStyles,\n    toggleStyles: unthemedToggleStyles,\n    listFilterWidgetBackground: undefined,\n    listFilterWidgetNoMatchesOutline: undefined,\n    listFilterWidgetOutline: undefined,\n    listFilterWidgetShadow: undefined\n};\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nexport var TreeFindMatchType;\n(function (TreeFindMatchType) {\n    TreeFindMatchType[TreeFindMatchType[\"Fuzzy\"] = 0] = \"Fuzzy\";\n    TreeFindMatchType[TreeFindMatchType[\"Contiguous\"] = 1] = \"Contiguous\";\n})(TreeFindMatchType || (TreeFindMatchType = {}));\nclass FindWidget extends Disposable {\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    set matchType(matchType) {\n        this.matchTypeToggle.checked = matchType === TreeFindMatchType.Fuzzy;\n    }\n    constructor(container, tree, contextViewProvider, mode, matchType, options) {\n        var _a;\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this.top = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => container.removeChild(this.elements.root)));\n        const styles = (_a = options === null || options === void 0 ? void 0 : options.styles) !== null && _a !== void 0 ? _a : unthemedFindWidgetStyles;\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground;\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n        this.modeToggle = this._register(new ModeToggle(Object.assign(Object.assign({}, styles.toggleStyles), { isChecked: mode === TreeFindMode.Filter })));\n        this.matchTypeToggle = this._register(new FuzzyToggle(Object.assign(Object.assign({}, styles.toggleStyles), { isChecked: matchType === TreeFindMatchType.Fuzzy })));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.onDidChangeMatchType = Event.map(this.matchTypeToggle.onChange, () => this.matchTypeToggle.checked ? TreeFindMatchType.Fuzzy : TreeFindMatchType.Contiguous, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle, this.matchTypeToggle],\n            showCommonFindToggles: false,\n            inputBoxStyles: styles.inputBoxStyles,\n            toggleStyles: styles.toggleStyles,\n            history: options === null || options === void 0 ? void 0 : options.history\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = this._register(Event.chain(emitter.event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onKeyDown((e) => {\n            // Using equals() so we reserve modified keys for future use\n            if (e.equals(3 /* KeyCode.Enter */)) {\n                // This is the only keyboard way to return to the tree from a history item that isn't the last one\n                e.preventDefault();\n                e.stopPropagation();\n                this.findInput.inputBox.addToHistory();\n                this.tree.domFocus();\n                return;\n            }\n            if (e.equals(18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (this.findInput.inputBox.isAtLastInHistory() || this.findInput.inputBox.isNowhereInHistory()) {\n                    // Retain original pre-history DownArrow behavior\n                    this.findInput.inputBox.addToHistory();\n                    this.tree.domFocus();\n                }\n                else {\n                    // Downward through history\n                    this.findInput.inputBox.showNextValue();\n                }\n                return;\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                // Upward through history\n                this.findInput.inputBox.showPreviousValue();\n                return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(window, 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(window, 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            const startTop = this.top;\n            const startY = e.pageY;\n            this.elements.grab.classList.add('grabbing');\n            const transition = this.elements.root.style.transition;\n            this.elements.root.style.transition = 'unset';\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                const deltaY = e.pageY - startY;\n                this.top = startTop + deltaY;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                this.elements.root.style.transition = transition;\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = this._register(Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            let top;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (e.keyCode === 16 /* KeyCode.UpArrow */) {\n                top = 0;\n            }\n            else if (e.keyCode === 18 /* KeyCode.DownArrow */) {\n                top = Number.POSITIVE_INFINITY;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n            if (top !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.top = top;\n                const transition = this.elements.root.style.transition;\n                this.elements.root.style.transition = 'unset';\n                this.layout();\n                setTimeout(() => {\n                    this.elements.root.style.transition = transition;\n                }, 0);\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n        this.top = clamp(this.top, 0, 24);\n        this.elements.root.style.top = `${this.top}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    dispose() {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this._onDidDisable.fire();\n            this.elements.root.classList.add('disabled');\n            yield timeout(300);\n            _super.dispose.call(this);\n        });\n    }\n}\nclass FindController {\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    get matchType() { return this._matchType; }\n    set matchType(matchType) {\n        if (matchType === this._matchType) {\n            return;\n        }\n        this._matchType = matchType;\n        if (this.widget) {\n            this.widget.matchType = this._matchType;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMatchType.fire(matchType);\n    }\n    constructor(tree, model, view, filter, contextViewProvider, options = {}) {\n        var _a, _b;\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangeMatchType = new Emitter();\n        this.onDidChangeMatchType = this._onDidChangeMatchType.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n        this._matchType = (_b = tree.options.defaultFindMatchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (optionsUpdate.defaultFindMode !== undefined) {\n            this.mode = optionsUpdate.defaultFindMode;\n        }\n        if (optionsUpdate.defaultFindMatchType !== undefined) {\n            this.matchType = optionsUpdate.defaultFindMatchType;\n        }\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        var _a, _b, _c, _d;\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            if ((_a = this.tree.options.showNotFoundMessage) !== null && _a !== void 0 ? _a : true) {\n                (_b = this.widget) === null || _b === void 0 ? void 0 : _b.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n            }\n            else {\n                (_c = this.widget) === null || _c === void 0 ? void 0 : _c.showMessage({ type: 2 /* MessageType.WARNING */ });\n            }\n        }\n        else {\n            (_d = this.widget) === null || _d === void 0 ? void 0 : _d.clearMessage();\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern || this._mode === TreeFindMode.Filter) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    layout(width) {\n        var _a;\n        this.width = width;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n    dispose() {\n        this._history = undefined;\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode && insertedNode.visible) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree) {\n        super(list);\n        this.tree = tree;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        let expandOnlyOnTwistieClick = false;\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n            return super.onViewPointer(e);\n        }\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n            return super.onViewPointer(e);\n        }\n        if (node.collapsible) {\n            const location = this.tree.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            this.tree.toggleCollapsed(location, recursive);\n            if (expandOnlyOnTwistieClick && onTwistie) {\n                // Do not set this before calling a handler on the super class, because it will reject it as handled\n                e.browserEvent.isHandledByList = true;\n                return;\n            }\n        }\n        super.onViewPointer(e);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    get onDidScroll() { return this.view.onDidScroll; }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get findMatchType() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.matchType) !== null && _b !== void 0 ? _b : TreeFindMatchType.Fuzzy; }\n    set findMatchType(findFuzzy) { if (this.findController) {\n        this.findController.matchType = findFuzzy;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        var _a;\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        const treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        const renderedIndentGuides = new SetMap();\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, renderedIndentGuides, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\n            .debounce(() => null, 0)\n            .map(() => {\n            const set = new Set();\n            for (const node of this.focus.getNodes()) {\n                set.add(node);\n            }\n            for (const node of this.selection.getNodes()) {\n                set.add(node);\n            }\n            return [...set.values()];\n        }).event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown)\n                .filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e));\n            onKeyDown.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */).on(this.onRightArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 10 /* KeyCode.Space */).on(this.onSpace, this, this.disposables);\n        }\n        if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            const opts = this.options.findWidgetStyles ? { styles: this.options.findWidgetStyles } : undefined;\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider, opts);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n            this.onDidChangeFindMatchType = this.findController.onDidChangeMatchType;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n            this.onDidChangeFindMatchType = Event.None;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    updateOptions(optionsUpdate = {}) {\n        var _a;\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.updateOptions(optionsUpdate);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.view.scrollHeight;\n    }\n    get renderHeight() {\n        return this.view.renderHeight;\n    }\n    domFocus() {\n        this.view.domFocus();\n    }\n    layout(height, width) {\n        var _a;\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n        }\n    }\n    style(styles) {\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeInactiveIndentGuidesStroke}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    getNodeLocation(node) {\n        return this.model.getNodeLocation(node);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    toggleCollapsed(location, recursive = false) {\n        return this.model.setCollapsed(location, undefined, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.selection.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setSelection(indexes, browserEvent, true);\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.focus.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setFocus(indexes, browserEvent, true);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        this.view.reveal(index, relativeTop);\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        dispose(this.disposables);\n        this.view.dispose();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}