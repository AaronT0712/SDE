{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, h } from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { autorun, derived, keepAlive, observableValue } from '../../../../base/common/observable.js';\nimport { autorunWithStore2 } from '../../../../base/common/observableImpl/autorun.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { derivedWithStore } from '../../../../base/common/observableImpl/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { CodeEditorWidget } from '../codeEditorWidget.js';\nimport { DiffEditorDecorations } from './diffEditorDecorations.js';\nimport { DiffEditorSash } from './diffEditorSash.js';\nimport { ViewZoneManager } from './lineAlignment.js';\nimport { MovedBlocksLinesPart } from './movedBlocksLines.js';\nimport { OverviewRulerPart } from './overviewRulerPart.js';\nimport { UnchangedRangesFeature } from './unchangedRanges.js';\nimport { ObservableElementSizeObserver, applyStyle, readHotReloadableExport } from './utils.js';\nimport { WorkerBasedDocumentDiffProvider } from '../workerBasedDocumentDiffProvider.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorEditors } from './diffEditorEditors.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nimport { AccessibleDiffViewer } from './accessibleDiffViewer.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport './colors.js';\nlet DiffEditorWidget2 = class DiffEditorWidget2 extends DelegatingEditor {\n  constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _audioCueService) {\n    var _a;\n    super();\n    this._domElement = _domElement;\n    this._parentContextKeyService = _parentContextKeyService;\n    this._parentInstantiationService = _parentInstantiationService;\n    this._audioCueService = _audioCueService;\n    this.elements = h('div.monaco-diff-editor.side-by-side', {\n      style: {\n        position: 'relative',\n        height: '100%'\n      }\n    }, [h('div.noModificationsOverlay@overlay', {\n      style: {\n        position: 'absolute',\n        height: '100%',\n        visibility: 'hidden'\n      }\n    }, [$('span', {}, 'No Changes')]), h('div.editor.original@original', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.editor.modified@modified', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.accessibleDiffViewer@accessibleDiffViewer', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    })]);\n    this._diffModel = this._register(disposableObservableValue('diffModel', undefined));\n    this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n    this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n    this._instantiationService = this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n    this._boundarySashes = observableValue('boundarySashes', undefined);\n    this._accessibleDiffViewerShouldBeVisible = observableValue('accessibleDiffViewerShouldBeVisible', false);\n    this._accessibleDiffViewerVisible = derived('accessibleDiffViewerVisible', reader => this._options.onlyShowAccessibleDiffViewer.read(reader) ? true : this._accessibleDiffViewerShouldBeVisible.read(reader));\n    this._layoutInfo = derived('modifiedEditorLayoutInfo', reader => {\n      var _a;\n      const width = this._rootSizeObserver.width.read(reader);\n      const height = this._rootSizeObserver.height.read(reader);\n      const sashLeft = (_a = this._sash.read(reader)) === null || _a === void 0 ? void 0 : _a.sashLeft.read(reader);\n      const originalWidth = sashLeft !== null && sashLeft !== void 0 ? sashLeft : Math.max(5, this._editors.original.getLayoutInfo().decorationsLeft);\n      const modifiedWidth = width - originalWidth - (this._options.renderOverviewRuler.read(reader) ? OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n      this.elements.original.style.width = originalWidth + 'px';\n      this.elements.original.style.left = '0px';\n      this.elements.modified.style.width = modifiedWidth + 'px';\n      this.elements.modified.style.left = originalWidth + 'px';\n      this._editors.original.layout({\n        width: originalWidth,\n        height\n      });\n      this._editors.modified.layout({\n        width: modifiedWidth,\n        height\n      });\n      return {\n        modifiedEditor: this._editors.modified.getLayoutInfo(),\n        originalEditor: this._editors.original.getLayoutInfo()\n      };\n    });\n    this._diffValue = this._diffModel.map((m, r) => m === null || m === void 0 ? void 0 : m.diff.read(r));\n    this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n    codeEditorService.willCreateDiffEditor();\n    this._contextKeyService.createKey('isInDiffEditor', true);\n    this._contextKeyService.createKey('diffEditorVersion', 2);\n    this._options = new DiffEditorOptions(options);\n    this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n    const isEmbeddedDiffEditorKey = EditorContextKeys.isEmbeddedDiffEditor.bindTo(this._contextKeyService);\n    this._register(autorun('update isEmbeddedDiffEditorKey', reader => {\n      isEmbeddedDiffEditorKey.set(this._options.isInEmbeddedEditor.read(reader));\n    }));\n    const accessibleDiffViewerVisibleContextKeyValue = EditorContextKeys.accessibleDiffViewerVisible.bindTo(this._contextKeyService);\n    this._register(autorun('update accessibleDiffViewerVisible context key', reader => {\n      accessibleDiffViewerVisibleContextKeyValue.set(this._accessibleDiffViewerVisible.read(reader));\n    }));\n    this._domElement.appendChild(this.elements.root);\n    this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n    this._rootSizeObserver.setAutomaticLayout((_a = options.automaticLayout) !== null && _a !== void 0 ? _a : false);\n    this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n    this._sash = derivedWithStore('sash', (reader, store) => {\n      const showSash = this._options.renderSideBySide.read(reader);\n      this.elements.root.classList.toggle('side-by-side', showSash);\n      if (!showSash) {\n        return undefined;\n      }\n      const result = store.add(new DiffEditorSash(this._options, this.elements.root, {\n        height: this._rootSizeObserver.height,\n        width: this._rootSizeObserver.width.map((w, reader) => w - (this._options.renderOverviewRuler.read(reader) ? OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH : 0))\n      }));\n      store.add(autorun('setBoundarySashes', reader => {\n        const boundarySashes = this._boundarySashes.read(reader);\n        if (boundarySashes) {\n          result.setBoundarySashes(boundarySashes);\n        }\n      }));\n      return result;\n    });\n    this._register(keepAlive(this._sash, true));\n    this._register(autorunWithStore2('UnchangedRangesFeature', (reader, store) => {\n      this.unchangedRangesFeature = store.add(new (readHotReloadableExport(UnchangedRangesFeature, reader))(this._editors, this._diffModel, this._options));\n    }));\n    this._register(autorunWithStore2('DiffEditorDecorations', (reader, store) => {\n      store.add(new (readHotReloadableExport(DiffEditorDecorations, reader))(this._editors, this._diffModel, this._options));\n    }));\n    this._register(autorunWithStore2('ViewZoneManager', (reader, store) => {\n      store.add(this._instantiationService.createInstance(readHotReloadableExport(ViewZoneManager, reader), this._editors, this._diffModel, this._options, this, () => this.unchangedRangesFeature.isUpdatingViewZones));\n    }));\n    this._register(autorunWithStore2('OverviewRulerPart', (reader, store) => {\n      store.add(this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerPart, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor), this._options));\n    }));\n    this._register(autorunWithStore2('_accessibleDiffViewer', (reader, store) => {\n      this._accessibleDiffViewer = store.add(this._register(this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => {\n        var _a;\n        return (_a = m === null || m === void 0 ? void 0 : m.diff.read(r)) === null || _a === void 0 ? void 0 : _a.mappings.map(m => m.lineRangeMapping);\n      }), this._editors)));\n    }));\n    const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n    this._register(applyStyle(this.elements.modified, {\n      visibility\n    }));\n    this._register(applyStyle(this.elements.original, {\n      visibility\n    }));\n    this._createDiffEditorContributions();\n    codeEditorService.addDiffEditor(this);\n    this._register(keepAlive(this._layoutInfo, true));\n    this._register(new MovedBlocksLinesPart(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors));\n    this._register(applyStyle(this.elements.overlay, {\n      width: this._layoutInfo.map((i, r) => i.originalEditor.width + (this._options.renderSideBySide.read(r) ? 0 : i.modifiedEditor.width)),\n      visibility: derived('visibility', reader => {\n        var _a, _b;\n        return this._options.collapseUnchangedRegions.read(reader) && ((_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.diff.read(reader)) === null || _b === void 0 ? void 0 : _b.mappings.length) === 0 ? 'visible' : 'hidden';\n      })\n    }));\n    this._register(this._editors.original.onDidChangeCursorPosition(e => {\n      const m = this._diffModel.get();\n      if (!m) {\n        return;\n      }\n      const movedText = m.diff.get().movedTexts.find(m => m.lineRangeMapping.original.contains(e.position.lineNumber));\n      m.syncedMovedTexts.set(movedText, undefined);\n    }));\n    this._register(this._editors.modified.onDidChangeCursorPosition(e => {\n      const m = this._diffModel.get();\n      if (!m) {\n        return;\n      }\n      const movedText = m.diff.get().movedTexts.find(m => m.lineRangeMapping.modified.contains(e.position.lineNumber));\n      m.syncedMovedTexts.set(movedText, undefined);\n    }));\n    // Revert change when an arrow is clicked.\n    this._register(this._editors.modified.onMouseDown(event => {\n      var _a, _b;\n      if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n        const lineNumber = event.target.position.lineNumber;\n        const viewZone = event.target;\n        const model = this._diffModel.get();\n        if (!model) {\n          return;\n        }\n        const diffs = (_b = model.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings;\n        if (!diffs) {\n          return;\n        }\n        const diff = diffs.find(d => (viewZone === null || viewZone === void 0 ? void 0 : viewZone.detail.afterLineNumber) === d.lineRangeMapping.modifiedRange.startLineNumber - 1 || d.lineRangeMapping.modifiedRange.startLineNumber === lineNumber);\n        if (!diff) {\n          return;\n        }\n        this.revert(diff.lineRangeMapping);\n        event.event.stopPropagation();\n      }\n    }));\n    this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => {\n      var _a, _b;\n      if ((e === null || e === void 0 ? void 0 : e.reason) === 3 /* CursorChangeReason.Explicit */) {\n        const diff = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings.find(m => m.lineRangeMapping.modifiedRange.contains(e.position.lineNumber));\n        if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.modifiedRange.isEmpty) {\n          this._audioCueService.playAudioCue(AudioCue.diffLineDeleted);\n        } else if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.originalRange.isEmpty) {\n          this._audioCueService.playAudioCue(AudioCue.diffLineInserted);\n        } else if (diff) {\n          this._audioCueService.playAudioCue(AudioCue.diffLineModified);\n        }\n      }\n    }));\n  }\n  _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n    const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    return editor;\n  }\n  _createDiffEditorContributions() {\n    const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n    for (const desc of contributions) {\n      try {\n        this._register(this._instantiationService.createInstance(desc.ctor, this));\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n  }\n  get _targetEditor() {\n    return this._editors.modified;\n  }\n  getEditorType() {\n    return EditorType.IDiffEditor;\n  }\n  layout(dimension) {\n    this._rootSizeObserver.observe(dimension);\n  }\n  hasTextFocus() {\n    return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus();\n  }\n  saveViewState() {\n    var _a;\n    const originalViewState = this._editors.original.saveViewState();\n    const modifiedViewState = this._editors.modified.saveViewState();\n    return {\n      original: originalViewState,\n      modified: modifiedViewState,\n      modelState: (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.serializeState()\n    };\n  }\n  restoreViewState(s) {\n    var _a;\n    if (s && s.original && s.modified) {\n      const diffEditorState = s;\n      this._editors.original.restoreViewState(diffEditorState.original);\n      this._editors.modified.restoreViewState(diffEditorState.modified);\n      if (diffEditorState.modelState) {\n        (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.restoreSerializedState(diffEditorState.modelState);\n      }\n    }\n  }\n  createViewModel(model) {\n    return new DiffEditorViewModel(model, this._options,\n    // TODO@hediet make diffAlgorithm observable\n    this._instantiationService.createInstance(WorkerBasedDocumentDiffProvider, {\n      diffAlgorithm: this._options.diffAlgorithm.get()\n    }));\n  }\n  getModel() {\n    var _a, _b;\n    return (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.model) !== null && _b !== void 0 ? _b : null;\n  }\n  setModel(model) {\n    if (!model && this._diffModel.get()) {\n      // Transitioning from a model to no-model\n      this._accessibleDiffViewer.close();\n    }\n    const vm = model ? 'model' in model ? model : this.createViewModel(model) : undefined;\n    this._editors.original.setModel(vm ? vm.model.original : null);\n    this._editors.modified.setModel(vm ? vm.model.modified : null);\n    transaction(tx => {\n      this._diffModel.set(vm, tx);\n    });\n  }\n  /**\n   * @param changedOptions Only has values for top-level options that have actually changed.\n   */\n  updateOptions(changedOptions) {\n    this._options.updateOptions(changedOptions);\n  }\n  getContainerDomNode() {\n    return this._domElement;\n  }\n  getOriginalEditor() {\n    return this._editors.original;\n  }\n  getModifiedEditor() {\n    return this._editors.modified;\n  }\n  /**\n   * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n   */\n  getLineChanges() {\n    var _a;\n    const diffState = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get();\n    if (!diffState) {\n      return null;\n    }\n    return toLineChanges(diffState);\n  }\n  revert(diff) {\n    var _a;\n    const model = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.model;\n    if (!model) {\n      return;\n    }\n    const changes = diff.innerChanges ? diff.innerChanges.map(c => ({\n      range: c.modifiedRange,\n      text: model.original.getValueInRange(c.originalRange)\n    })) : [{\n      range: diff.modifiedRange.toExclusiveRange(),\n      text: model.original.getValueInRange(diff.originalRange.toExclusiveRange())\n    }];\n    this._editors.modified.executeEdits('diffEditor', changes);\n  }\n  accessibleDiffViewerNext() {\n    this._accessibleDiffViewer.next();\n  }\n  accessibleDiffViewerPrev() {\n    this._accessibleDiffViewer.prev();\n  }\n};\nDiffEditorWidget2 = __decorate([__param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ICodeEditorService), __param(6, IAudioCueService)], DiffEditorWidget2);\nexport { DiffEditorWidget2 };\nfunction toLineChanges(state) {\n  return state.mappings.map(x => {\n    const m = x.lineRangeMapping;\n    let originalStartLineNumber;\n    let originalEndLineNumber;\n    let modifiedStartLineNumber;\n    let modifiedEndLineNumber;\n    let innerChanges = m.innerChanges;\n    if (m.originalRange.isEmpty) {\n      // Insertion\n      originalStartLineNumber = m.originalRange.startLineNumber - 1;\n      originalEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      originalStartLineNumber = m.originalRange.startLineNumber;\n      originalEndLineNumber = m.originalRange.endLineNumberExclusive - 1;\n    }\n    if (m.modifiedRange.isEmpty) {\n      // Deletion\n      modifiedStartLineNumber = m.modifiedRange.startLineNumber - 1;\n      modifiedEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      modifiedStartLineNumber = m.modifiedRange.startLineNumber;\n      modifiedEndLineNumber = m.modifiedRange.endLineNumberExclusive - 1;\n    }\n    return {\n      originalStartLineNumber,\n      originalEndLineNumber,\n      modifiedStartLineNumber,\n      modifiedEndLineNumber,\n      charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n        originalStartLineNumber: m.originalRange.startLineNumber,\n        originalStartColumn: m.originalRange.startColumn,\n        originalEndLineNumber: m.originalRange.endLineNumber,\n        originalEndColumn: m.originalRange.endColumn,\n        modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n        modifiedStartColumn: m.modifiedRange.startColumn,\n        modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n        modifiedEndColumn: m.modifiedRange.endColumn\n      }))\n    };\n  });\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","h","onUnexpectedError","Event","autorun","derived","keepAlive","observableValue","autorunWithStore2","disposableObservableValue","transaction","derivedWithStore","EditorExtensionsRegistry","ICodeEditorService","CodeEditorWidget","DiffEditorDecorations","DiffEditorSash","ViewZoneManager","MovedBlocksLinesPart","OverviewRulerPart","UnchangedRangesFeature","ObservableElementSizeObserver","applyStyle","readHotReloadableExport","WorkerBasedDocumentDiffProvider","EditorType","EditorContextKeys","IContextKeyService","IInstantiationService","ServiceCollection","DelegatingEditor","DiffEditorEditors","DiffEditorOptions","DiffEditorViewModel","AccessibleDiffViewer","AudioCue","IAudioCueService","DiffEditorWidget2","constructor","_domElement","options","codeEditorWidgetOptions","_parentContextKeyService","_parentInstantiationService","codeEditorService","_audioCueService","_a","elements","style","position","height","visibility","_diffModel","_register","undefined","onDidChangeModel","fromObservableLight","_contextKeyService","createScoped","_instantiationService","createChild","_boundarySashes","_accessibleDiffViewerShouldBeVisible","_accessibleDiffViewerVisible","reader","_options","onlyShowAccessibleDiffViewer","read","_layoutInfo","width","_rootSizeObserver","sashLeft","_sash","originalWidth","Math","max","_editors","original","getLayoutInfo","decorationsLeft","modifiedWidth","renderOverviewRuler","ENTIRE_DIFF_OVERVIEW_WIDTH","left","modified","layout","modifiedEditor","originalEditor","_diffValue","map","m","diff","onDidUpdateDiff","willCreateDiffEditor","createKey","isEmbeddedDiffEditor","isEmbeddedDiffEditorKey","bindTo","set","isInEmbeddedEditor","accessibleDiffViewerVisibleContextKeyValue","accessibleDiffViewerVisible","appendChild","root","dimension","setAutomaticLayout","automaticLayout","createInstance","o","o2","_createInnerEditor","store","showSash","renderSideBySide","classList","toggle","result","add","w","boundarySashes","setBoundarySashes","unchangedRangesFeature","isUpdatingViewZones","_accessibleDiffViewer","accessibleDiffViewer","visible","tx","v","mappings","lineRangeMapping","_createDiffEditorContributions","addDiffEditor","overlay","_b","collapseUnchangedRegions","onDidChangeCursorPosition","e","get","movedText","movedTexts","find","contains","lineNumber","syncedMovedTexts","onMouseDown","event","rightButton","element","className","includes","viewZone","model","diffs","detail","afterLineNumber","modifiedRange","startLineNumber","revert","stopPropagation","runAndSubscribe","reason","isEmpty","playAudioCue","diffLineDeleted","originalRange","diffLineInserted","diffLineModified","instantiationService","container","editorWidgetOptions","editor","contributions","getDiffEditorContributions","ctor","err","_targetEditor","getEditorType","IDiffEditor","observe","hasTextFocus","saveViewState","originalViewState","modifiedViewState","modelState","serializeState","restoreViewState","s","diffEditorState","restoreSerializedState","createViewModel","diffAlgorithm","getModel","setModel","close","vm","updateOptions","changedOptions","getContainerDomNode","getOriginalEditor","getModifiedEditor","getLineChanges","diffState","toLineChanges","changes","innerChanges","range","text","getValueInRange","toExclusiveRange","executeEdits","accessibleDiffViewerNext","next","accessibleDiffViewerPrev","prev","state","x","originalStartLineNumber","originalEndLineNumber","modifiedStartLineNumber","modifiedEndLineNumber","endLineNumberExclusive","charChanges","originalStartColumn","startColumn","endLineNumber","originalEndColumn","endColumn","modifiedStartColumn","modifiedEndColumn"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget2/diffEditorWidget2.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, h } from '../../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { autorun, derived, keepAlive, observableValue } from '../../../../base/common/observable.js';\nimport { autorunWithStore2 } from '../../../../base/common/observableImpl/autorun.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { derivedWithStore } from '../../../../base/common/observableImpl/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { CodeEditorWidget } from '../codeEditorWidget.js';\nimport { DiffEditorDecorations } from './diffEditorDecorations.js';\nimport { DiffEditorSash } from './diffEditorSash.js';\nimport { ViewZoneManager } from './lineAlignment.js';\nimport { MovedBlocksLinesPart } from './movedBlocksLines.js';\nimport { OverviewRulerPart } from './overviewRulerPart.js';\nimport { UnchangedRangesFeature } from './unchangedRanges.js';\nimport { ObservableElementSizeObserver, applyStyle, readHotReloadableExport } from './utils.js';\nimport { WorkerBasedDocumentDiffProvider } from '../workerBasedDocumentDiffProvider.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorEditors } from './diffEditorEditors.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nimport { AccessibleDiffViewer } from './accessibleDiffViewer.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport './colors.js';\nlet DiffEditorWidget2 = class DiffEditorWidget2 extends DelegatingEditor {\n    constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _audioCueService) {\n        var _a;\n        super();\n        this._domElement = _domElement;\n        this._parentContextKeyService = _parentContextKeyService;\n        this._parentInstantiationService = _parentInstantiationService;\n        this._audioCueService = _audioCueService;\n        this.elements = h('div.monaco-diff-editor.side-by-side', { style: { position: 'relative', height: '100%' } }, [\n            h('div.noModificationsOverlay@overlay', { style: { position: 'absolute', height: '100%', visibility: 'hidden', } }, [$('span', {}, 'No Changes')]),\n            h('div.editor.original@original', { style: { position: 'absolute', height: '100%' } }),\n            h('div.editor.modified@modified', { style: { position: 'absolute', height: '100%' } }),\n            h('div.accessibleDiffViewer@accessibleDiffViewer', { style: { position: 'absolute', height: '100%' } }),\n        ]);\n        this._diffModel = this._register(disposableObservableValue('diffModel', undefined));\n        this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n        this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n        this._instantiationService = this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._boundarySashes = observableValue('boundarySashes', undefined);\n        this._accessibleDiffViewerShouldBeVisible = observableValue('accessibleDiffViewerShouldBeVisible', false);\n        this._accessibleDiffViewerVisible = derived('accessibleDiffViewerVisible', reader => this._options.onlyShowAccessibleDiffViewer.read(reader)\n            ? true\n            : this._accessibleDiffViewerShouldBeVisible.read(reader));\n        this._layoutInfo = derived('modifiedEditorLayoutInfo', (reader) => {\n            var _a;\n            const width = this._rootSizeObserver.width.read(reader);\n            const height = this._rootSizeObserver.height.read(reader);\n            const sashLeft = (_a = this._sash.read(reader)) === null || _a === void 0 ? void 0 : _a.sashLeft.read(reader);\n            const originalWidth = sashLeft !== null && sashLeft !== void 0 ? sashLeft : Math.max(5, this._editors.original.getLayoutInfo().decorationsLeft);\n            const modifiedWidth = width - originalWidth - (this._options.renderOverviewRuler.read(reader) ? OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n            this.elements.original.style.width = originalWidth + 'px';\n            this.elements.original.style.left = '0px';\n            this.elements.modified.style.width = modifiedWidth + 'px';\n            this.elements.modified.style.left = originalWidth + 'px';\n            this._editors.original.layout({ width: originalWidth, height });\n            this._editors.modified.layout({ width: modifiedWidth, height });\n            return {\n                modifiedEditor: this._editors.modified.getLayoutInfo(),\n                originalEditor: this._editors.original.getLayoutInfo(),\n            };\n        });\n        this._diffValue = this._diffModel.map((m, r) => m === null || m === void 0 ? void 0 : m.diff.read(r));\n        this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n        codeEditorService.willCreateDiffEditor();\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._contextKeyService.createKey('diffEditorVersion', 2);\n        this._options = new DiffEditorOptions(options);\n        this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n        const isEmbeddedDiffEditorKey = EditorContextKeys.isEmbeddedDiffEditor.bindTo(this._contextKeyService);\n        this._register(autorun('update isEmbeddedDiffEditorKey', reader => {\n            isEmbeddedDiffEditorKey.set(this._options.isInEmbeddedEditor.read(reader));\n        }));\n        const accessibleDiffViewerVisibleContextKeyValue = EditorContextKeys.accessibleDiffViewerVisible.bindTo(this._contextKeyService);\n        this._register(autorun('update accessibleDiffViewerVisible context key', reader => {\n            accessibleDiffViewerVisibleContextKeyValue.set(this._accessibleDiffViewerVisible.read(reader));\n        }));\n        this._domElement.appendChild(this.elements.root);\n        this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n        this._rootSizeObserver.setAutomaticLayout((_a = options.automaticLayout) !== null && _a !== void 0 ? _a : false);\n        this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n        this._sash = derivedWithStore('sash', (reader, store) => {\n            const showSash = this._options.renderSideBySide.read(reader);\n            this.elements.root.classList.toggle('side-by-side', showSash);\n            if (!showSash) {\n                return undefined;\n            }\n            const result = store.add(new DiffEditorSash(this._options, this.elements.root, {\n                height: this._rootSizeObserver.height,\n                width: this._rootSizeObserver.width.map((w, reader) => w - (this._options.renderOverviewRuler.read(reader) ? OverviewRulerPart.ENTIRE_DIFF_OVERVIEW_WIDTH : 0)),\n            }));\n            store.add(autorun('setBoundarySashes', reader => {\n                const boundarySashes = this._boundarySashes.read(reader);\n                if (boundarySashes) {\n                    result.setBoundarySashes(boundarySashes);\n                }\n            }));\n            return result;\n        });\n        this._register(keepAlive(this._sash, true));\n        this._register(autorunWithStore2('UnchangedRangesFeature', (reader, store) => {\n            this.unchangedRangesFeature = store.add(new (readHotReloadableExport(UnchangedRangesFeature, reader))(this._editors, this._diffModel, this._options));\n        }));\n        this._register(autorunWithStore2('DiffEditorDecorations', (reader, store) => {\n            store.add(new (readHotReloadableExport(DiffEditorDecorations, reader))(this._editors, this._diffModel, this._options));\n        }));\n        this._register(autorunWithStore2('ViewZoneManager', (reader, store) => {\n            store.add(this._instantiationService.createInstance(readHotReloadableExport(ViewZoneManager, reader), this._editors, this._diffModel, this._options, this, () => this.unchangedRangesFeature.isUpdatingViewZones));\n        }));\n        this._register(autorunWithStore2('OverviewRulerPart', (reader, store) => {\n            store.add(this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerPart, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor), this._options));\n        }));\n        this._register(autorunWithStore2('_accessibleDiffViewer', (reader, store) => {\n            this._accessibleDiffViewer = store.add(this._register(this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => { var _a; return (_a = m === null || m === void 0 ? void 0 : m.diff.read(r)) === null || _a === void 0 ? void 0 : _a.mappings.map(m => m.lineRangeMapping); }), this._editors)));\n        }));\n        const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n        this._register(applyStyle(this.elements.modified, { visibility }));\n        this._register(applyStyle(this.elements.original, { visibility }));\n        this._createDiffEditorContributions();\n        codeEditorService.addDiffEditor(this);\n        this._register(keepAlive(this._layoutInfo, true));\n        this._register(new MovedBlocksLinesPart(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors));\n        this._register(applyStyle(this.elements.overlay, {\n            width: this._layoutInfo.map((i, r) => i.originalEditor.width + (this._options.renderSideBySide.read(r) ? 0 : i.modifiedEditor.width)),\n            visibility: derived('visibility', reader => {\n                var _a, _b;\n                return (this._options.collapseUnchangedRegions.read(reader) && ((_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.diff.read(reader)) === null || _b === void 0 ? void 0 : _b.mappings.length) === 0)\n                    ? 'visible' : 'hidden';\n            }),\n        }));\n        this._register(this._editors.original.onDidChangeCursorPosition(e => {\n            const m = this._diffModel.get();\n            if (!m) {\n                return;\n            }\n            const movedText = m.diff.get().movedTexts.find(m => m.lineRangeMapping.original.contains(e.position.lineNumber));\n            m.syncedMovedTexts.set(movedText, undefined);\n        }));\n        this._register(this._editors.modified.onDidChangeCursorPosition(e => {\n            const m = this._diffModel.get();\n            if (!m) {\n                return;\n            }\n            const movedText = m.diff.get().movedTexts.find(m => m.lineRangeMapping.modified.contains(e.position.lineNumber));\n            m.syncedMovedTexts.set(movedText, undefined);\n        }));\n        // Revert change when an arrow is clicked.\n        this._register(this._editors.modified.onMouseDown(event => {\n            var _a, _b;\n            if (!event.event.rightButton && event.target.position && ((_a = event.target.element) === null || _a === void 0 ? void 0 : _a.className.includes('arrow-revert-change'))) {\n                const lineNumber = event.target.position.lineNumber;\n                const viewZone = event.target;\n                const model = this._diffModel.get();\n                if (!model) {\n                    return;\n                }\n                const diffs = (_b = model.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings;\n                if (!diffs) {\n                    return;\n                }\n                const diff = diffs.find(d => (viewZone === null || viewZone === void 0 ? void 0 : viewZone.detail.afterLineNumber) === d.lineRangeMapping.modifiedRange.startLineNumber - 1 ||\n                    d.lineRangeMapping.modifiedRange.startLineNumber === lineNumber);\n                if (!diff) {\n                    return;\n                }\n                this.revert(diff.lineRangeMapping);\n                event.event.stopPropagation();\n            }\n        }));\n        this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, (e) => {\n            var _a, _b;\n            if ((e === null || e === void 0 ? void 0 : e.reason) === 3 /* CursorChangeReason.Explicit */) {\n                const diff = (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get()) === null || _b === void 0 ? void 0 : _b.mappings.find(m => m.lineRangeMapping.modifiedRange.contains(e.position.lineNumber));\n                if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.modifiedRange.isEmpty) {\n                    this._audioCueService.playAudioCue(AudioCue.diffLineDeleted);\n                }\n                else if (diff === null || diff === void 0 ? void 0 : diff.lineRangeMapping.originalRange.isEmpty) {\n                    this._audioCueService.playAudioCue(AudioCue.diffLineInserted);\n                }\n                else if (diff) {\n                    this._audioCueService.playAudioCue(AudioCue.diffLineModified);\n                }\n            }\n        }));\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n        return editor;\n    }\n    _createDiffEditorContributions() {\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(this._instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n    }\n    get _targetEditor() { return this._editors.modified; }\n    getEditorType() { return EditorType.IDiffEditor; }\n    layout(dimension) { this._rootSizeObserver.observe(dimension); }\n    hasTextFocus() { return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus(); }\n    saveViewState() {\n        var _a;\n        const originalViewState = this._editors.original.saveViewState();\n        const modifiedViewState = this._editors.modified.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState,\n            modelState: (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.serializeState(),\n        };\n    }\n    restoreViewState(s) {\n        var _a;\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._editors.original.restoreViewState(diffEditorState.original);\n            this._editors.modified.restoreViewState(diffEditorState.modified);\n            if (diffEditorState.modelState) {\n                (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.restoreSerializedState(diffEditorState.modelState);\n            }\n        }\n    }\n    createViewModel(model) {\n        return new DiffEditorViewModel(model, this._options, \n        // TODO@hediet make diffAlgorithm observable\n        this._instantiationService.createInstance(WorkerBasedDocumentDiffProvider, { diffAlgorithm: this._options.diffAlgorithm.get() }));\n    }\n    getModel() { var _a, _b; return (_b = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.model) !== null && _b !== void 0 ? _b : null; }\n    setModel(model) {\n        if (!model && this._diffModel.get()) {\n            // Transitioning from a model to no-model\n            this._accessibleDiffViewer.close();\n        }\n        const vm = model ? ('model' in model) ? model : this.createViewModel(model) : undefined;\n        this._editors.original.setModel(vm ? vm.model.original : null);\n        this._editors.modified.setModel(vm ? vm.model.modified : null);\n        transaction(tx => {\n            this._diffModel.set(vm, tx);\n        });\n    }\n    /**\n     * @param changedOptions Only has values for top-level options that have actually changed.\n     */\n    updateOptions(changedOptions) {\n        this._options.updateOptions(changedOptions);\n    }\n    getContainerDomNode() { return this._domElement; }\n    getOriginalEditor() { return this._editors.original; }\n    getModifiedEditor() { return this._editors.modified; }\n    /**\n     * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n     */\n    getLineChanges() {\n        var _a;\n        const diffState = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.diff.get();\n        if (!diffState) {\n            return null;\n        }\n        return toLineChanges(diffState);\n    }\n    revert(diff) {\n        var _a;\n        const model = (_a = this._diffModel.get()) === null || _a === void 0 ? void 0 : _a.model;\n        if (!model) {\n            return;\n        }\n        const changes = diff.innerChanges\n            ? diff.innerChanges.map(c => ({\n                range: c.modifiedRange,\n                text: model.original.getValueInRange(c.originalRange)\n            }))\n            : [\n                {\n                    range: diff.modifiedRange.toExclusiveRange(),\n                    text: model.original.getValueInRange(diff.originalRange.toExclusiveRange())\n                }\n            ];\n        this._editors.modified.executeEdits('diffEditor', changes);\n    }\n    accessibleDiffViewerNext() { this._accessibleDiffViewer.next(); }\n    accessibleDiffViewerPrev() { this._accessibleDiffViewer.prev(); }\n};\nDiffEditorWidget2 = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, IAudioCueService)\n], DiffEditorWidget2);\nexport { DiffEditorWidget2 };\nfunction toLineChanges(state) {\n    return state.mappings.map(x => {\n        const m = x.lineRangeMapping;\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let innerChanges = m.innerChanges;\n        if (m.originalRange.isEmpty) {\n            // Insertion\n            originalStartLineNumber = m.originalRange.startLineNumber - 1;\n            originalEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            originalStartLineNumber = m.originalRange.startLineNumber;\n            originalEndLineNumber = m.originalRange.endLineNumberExclusive - 1;\n        }\n        if (m.modifiedRange.isEmpty) {\n            // Deletion\n            modifiedStartLineNumber = m.modifiedRange.startLineNumber - 1;\n            modifiedEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            modifiedStartLineNumber = m.modifiedRange.startLineNumber;\n            modifiedEndLineNumber = m.modifiedRange.endLineNumberExclusive - 1;\n        }\n        return {\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(m => ({\n                originalStartLineNumber: m.originalRange.startLineNumber,\n                originalStartColumn: m.originalRange.startColumn,\n                originalEndLineNumber: m.originalRange.endLineNumber,\n                originalEndColumn: m.originalRange.endColumn,\n                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                modifiedStartColumn: m.modifiedRange.startColumn,\n                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                modifiedEndColumn: m.modifiedRange.endColumn,\n            }))\n        };\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}