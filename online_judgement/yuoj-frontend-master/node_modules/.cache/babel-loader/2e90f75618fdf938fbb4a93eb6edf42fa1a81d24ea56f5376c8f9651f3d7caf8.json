{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nconst defaultOptions = {\n  followsCaret: true,\n  ignoreCharChanges: true,\n  alwaysRevealFirst: true,\n  findResultLoop: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nlet DiffNavigator = class DiffNavigator extends Disposable {\n  constructor(editor, options = {}, _audioCueService, _codeEditorService, _accessibilityService) {\n    super();\n    this._audioCueService = _audioCueService;\n    this._codeEditorService = _codeEditorService;\n    this._accessibilityService = _accessibilityService;\n    this._onDidUpdate = this._register(new Emitter());\n    this._editor = editor;\n    this._options = objects.mixin(options, defaultOptions, false);\n    this.disposed = false;\n    this.nextIdx = -1;\n    this.ranges = [];\n    this.ignoreSelectionChange = false;\n    this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n    this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n    if (this._options.followsCaret) {\n      this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition(e => {\n        if (this.ignoreSelectionChange) {\n          return;\n        }\n        this._updateAccessibilityState(e.position.lineNumber);\n        this.nextIdx = -1;\n      }));\n    }\n    // init things\n    this._init();\n  }\n  _init() {\n    const changes = this._editor.getLineChanges();\n    if (!changes) {\n      return;\n    }\n  }\n  _onDiffUpdated() {\n    this._init();\n    this._compute(this._editor.getLineChanges());\n    if (this.revealFirst) {\n      // Only reveal first on first non-null changes\n      if (this._editor.getLineChanges() !== null) {\n        this.revealFirst = false;\n        this.nextIdx = -1;\n        this.next(1 /* ScrollType.Immediate */);\n      }\n    }\n  }\n\n  _compute(lineChanges) {\n    // new ranges\n    this.ranges = [];\n    if (lineChanges) {\n      // create ranges from changes\n      lineChanges.forEach(lineChange => {\n        if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n          lineChange.charChanges.forEach(charChange => {\n            this.ranges.push({\n              rhs: true,\n              range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n            });\n          });\n        } else {\n          if (lineChange.modifiedEndLineNumber === 0) {\n            // a deletion\n            this.ranges.push({\n              rhs: true,\n              range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n            });\n          } else {\n            // an insertion or modification\n            this.ranges.push({\n              rhs: true,\n              range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n            });\n          }\n        }\n      });\n    }\n    // sort\n    this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n    this._onDidUpdate.fire(this);\n  }\n  _initIdx(fwd) {\n    let found = false;\n    const position = this._editor.getPosition();\n    if (!position) {\n      this.nextIdx = 0;\n      return;\n    }\n    for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n      const range = this.ranges[i].range;\n      if (position.isBeforeOrEqual(range.getStartPosition())) {\n        this.nextIdx = i + (fwd ? 0 : -1);\n        found = true;\n      }\n    }\n    if (!found) {\n      // after the last change\n      this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n    }\n    if (this.nextIdx < 0) {\n      this.nextIdx = this.ranges.length - 1;\n    }\n  }\n  _move(fwd, scrollType) {\n    assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n    if (!this.canNavigate()) {\n      return;\n    }\n    if (this.nextIdx === -1) {\n      this._initIdx(fwd);\n    } else if (fwd) {\n      this.nextIdx += 1;\n      if (this.nextIdx >= this.ranges.length) {\n        this.nextIdx = 0;\n      }\n    } else {\n      this.nextIdx -= 1;\n      if (this.nextIdx < 0) {\n        this.nextIdx = this.ranges.length - 1;\n      }\n    }\n    const info = this.ranges[this.nextIdx];\n    this.ignoreSelectionChange = true;\n    try {\n      const pos = info.range.getStartPosition();\n      this._editor.setPosition(pos);\n      this._editor.revealRangeInCenter(info.range, scrollType);\n      this._updateAccessibilityState(pos.lineNumber, true);\n    } finally {\n      this.ignoreSelectionChange = false;\n    }\n  }\n  _updateAccessibilityState(lineNumber, jumpToChange) {\n    var _a;\n    const modifiedEditor = (_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified;\n    if (!modifiedEditor) {\n      return;\n    }\n    const insertedOrModified = modifiedEditor.getLineDecorations(lineNumber).find(l => l.options.className === 'line-insert');\n    if (insertedOrModified) {\n      this._audioCueService.playAudioCue(AudioCue.diffLineModified, true);\n    } else if (jumpToChange) {\n      // The modified editor does not include deleted lines, but when\n      // we are moved to the area where lines were deleted, play this cue\n      this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n    } else {\n      return;\n    }\n    const codeEditor = this._codeEditorService.getActiveCodeEditor();\n    if (jumpToChange && codeEditor && insertedOrModified && this._accessibilityService.isScreenReaderOptimized()) {\n      codeEditor.setSelection({\n        startLineNumber: lineNumber,\n        startColumn: 0,\n        endLineNumber: lineNumber,\n        endColumn: Number.MAX_VALUE\n      });\n      codeEditor.writeScreenReaderContent('diff-navigation');\n    }\n  }\n  canNavigate() {\n    return this.ranges && this.ranges.length > 0;\n  }\n  next(scrollType = 0 /* ScrollType.Smooth */) {\n    if (!this.canNavigateNext()) {\n      return;\n    }\n    this._move(true, scrollType);\n  }\n  previous(scrollType = 0 /* ScrollType.Smooth */) {\n    if (!this.canNavigatePrevious()) {\n      return;\n    }\n    this._move(false, scrollType);\n  }\n  canNavigateNext() {\n    return this.canNavigateLoop() || this.nextIdx < this.ranges.length - 1;\n  }\n  canNavigatePrevious() {\n    return this.canNavigateLoop() || this.nextIdx !== 0;\n  }\n  canNavigateLoop() {\n    return Boolean(this._options.findResultLoop);\n  }\n  dispose() {\n    super.dispose();\n    this.ranges = [];\n    this.disposed = true;\n  }\n};\nDiffNavigator = __decorate([__param(2, IAudioCueService), __param(3, ICodeEditorService), __param(4, IAccessibilityService)], DiffNavigator);\nexport { DiffNavigator };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","assert","Emitter","Disposable","objects","Range","AudioCue","IAudioCueService","ICodeEditorService","IAccessibilityService","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","findResultLoop","DiffNavigator","constructor","editor","options","_audioCueService","_codeEditorService","_accessibilityService","_onDidUpdate","_register","_editor","_options","mixin","disposed","nextIdx","ranges","ignoreSelectionChange","revealFirst","Boolean","onDidUpdateDiff","_onDiffUpdated","getModifiedEditor","onDidChangeCursorPosition","e","_updateAccessibilityState","position","lineNumber","_init","changes","getLineChanges","_compute","next","lineChanges","forEach","lineChange","charChanges","charChange","push","rhs","range","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","sort","left","right","compareRangesUsingStarts","fire","_initIdx","fwd","found","getPosition","len","isBeforeOrEqual","getStartPosition","_move","scrollType","ok","canNavigate","info","pos","setPosition","revealRangeInCenter","jumpToChange","_a","modifiedEditor","getModel","modified","insertedOrModified","getLineDecorations","find","l","className","playAudioCue","diffLineModified","diffLineDeleted","codeEditor","getActiveCodeEditor","isScreenReaderOptimized","setSelection","startLineNumber","startColumn","endLineNumber","endColumn","Number","MAX_VALUE","writeScreenReaderContent","canNavigateNext","previous","canNavigatePrevious","canNavigateLoop","dispose"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nimport { AudioCue, IAudioCueService } from '../../../platform/audioCues/browser/audioCueService.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true,\n    findResultLoop: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nlet DiffNavigator = class DiffNavigator extends Disposable {\n    constructor(editor, options = {}, _audioCueService, _codeEditorService, _accessibilityService) {\n        super();\n        this._audioCueService = _audioCueService;\n        this._codeEditorService = _codeEditorService;\n        this._accessibilityService = _accessibilityService;\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this._updateAccessibilityState(e.position.lineNumber);\n                this.nextIdx = -1;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* ScrollType.Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n            this._updateAccessibilityState(pos.lineNumber, true);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    _updateAccessibilityState(lineNumber, jumpToChange) {\n        var _a;\n        const modifiedEditor = (_a = this._editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified;\n        if (!modifiedEditor) {\n            return;\n        }\n        const insertedOrModified = modifiedEditor.getLineDecorations(lineNumber).find(l => l.options.className === 'line-insert');\n        if (insertedOrModified) {\n            this._audioCueService.playAudioCue(AudioCue.diffLineModified, true);\n        }\n        else if (jumpToChange) {\n            // The modified editor does not include deleted lines, but when\n            // we are moved to the area where lines were deleted, play this cue\n            this._audioCueService.playAudioCue(AudioCue.diffLineDeleted, true);\n        }\n        else {\n            return;\n        }\n        const codeEditor = this._codeEditorService.getActiveCodeEditor();\n        if (jumpToChange && codeEditor && insertedOrModified && this._accessibilityService.isScreenReaderOptimized()) {\n            codeEditor.setSelection({ startLineNumber: lineNumber, startColumn: 0, endLineNumber: lineNumber, endColumn: Number.MAX_VALUE });\n            codeEditor.writeScreenReaderContent('diff-navigation');\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigateNext()) {\n            return;\n        }\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* ScrollType.Smooth */) {\n        if (!this.canNavigatePrevious()) {\n            return;\n        }\n        this._move(false, scrollType);\n    }\n    canNavigateNext() {\n        return this.canNavigateLoop() || this.nextIdx < this.ranges.length - 1;\n    }\n    canNavigatePrevious() {\n        return this.canNavigateLoop() || this.nextIdx !== 0;\n    }\n    canNavigateLoop() {\n        return Boolean(this._options.findResultLoop);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n};\nDiffNavigator = __decorate([\n    __param(2, IAudioCueService),\n    __param(3, ICodeEditorService),\n    __param(4, IAccessibilityService)\n], DiffNavigator);\nexport { DiffNavigator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}