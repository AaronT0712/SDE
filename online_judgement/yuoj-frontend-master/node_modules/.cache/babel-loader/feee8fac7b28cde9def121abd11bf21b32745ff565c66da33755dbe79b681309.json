{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport './stickyScroll.css';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nexport class StickyScrollWidgetState {\n  constructor(lineNumbers, lastLineRelativePosition) {\n    this.lineNumbers = lineNumbers;\n    this.lastLineRelativePosition = lastLineRelativePosition;\n  }\n}\nconst _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', {\n  createHTML: value => value\n});\nexport class StickyScrollWidget extends Disposable {\n  constructor(_editor) {\n    super();\n    this._editor = _editor;\n    this._rootDomNode = document.createElement('div');\n    this._disposableStore = this._register(new DisposableStore());\n    this._lineNumbers = [];\n    this._lastLineRelativePosition = 0;\n    this._hoverOnLine = -1;\n    this._hoverOnColumn = -1;\n    this._layoutInfo = this._editor.getLayoutInfo();\n    this._rootDomNode = document.createElement('div');\n    this._rootDomNode.className = 'sticky-widget';\n    this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n    this._rootDomNode.style.width = `${this._layoutInfo.width - this._layoutInfo.minimap.minimapCanvasOuterWidth - this._layoutInfo.verticalScrollbarWidth}px`;\n  }\n  get hoverOnLine() {\n    return this._hoverOnLine;\n  }\n  get hoverOnColumn() {\n    return this._hoverOnColumn;\n  }\n  get lineNumbers() {\n    return this._lineNumbers;\n  }\n  getCurrentLines() {\n    return this._lineNumbers;\n  }\n  setState(state) {\n    dom.clearNode(this._rootDomNode);\n    this._disposableStore.clear();\n    this._lineNumbers.length = 0;\n    const editorLineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n    const futureWidgetHeight = state.lineNumbers.length * editorLineHeight + state.lastLineRelativePosition;\n    if (futureWidgetHeight > 0) {\n      this._lastLineRelativePosition = state.lastLineRelativePosition;\n      this._lineNumbers = state.lineNumbers;\n    } else {\n      this._lastLineRelativePosition = 0;\n      this._lineNumbers = [];\n    }\n    this._renderRootNode();\n  }\n  _renderRootNode() {\n    if (!this._editor._getViewModel()) {\n      return;\n    }\n    for (const [index, line] of this._lineNumbers.entries()) {\n      const childNode = this._renderChildNode(index, line);\n      this._rootDomNode.appendChild(childNode);\n    }\n    const editorLineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n    const widgetHeight = this._lineNumbers.length * editorLineHeight + this._lastLineRelativePosition;\n    this._rootDomNode.style.display = widgetHeight > 0 ? 'block' : 'none';\n    this._rootDomNode.style.height = widgetHeight.toString() + 'px';\n    this._rootDomNode.setAttribute('role', 'list');\n    const minimapSide = this._editor.getOption(71 /* EditorOption.minimap */).side;\n    if (minimapSide === 'left') {\n      this._rootDomNode.style.marginLeft = this._editor.getLayoutInfo().minimap.minimapCanvasOuterWidth + 'px';\n    }\n  }\n  _renderChildNode(index, line) {\n    const child = document.createElement('div');\n    const viewModel = this._editor._getViewModel();\n    const viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n    const lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n    const layoutInfo = this._editor.getLayoutInfo();\n    const width = layoutInfo.width - layoutInfo.minimap.minimapCanvasOuterWidth - layoutInfo.verticalScrollbarWidth;\n    const minimapSide = this._editor.getOption(71 /* EditorOption.minimap */).side;\n    const lineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n    const lineNumberOption = this._editor.getOption(66 /* EditorOption.lineNumbers */);\n    let actualInlineDecorations;\n    try {\n      actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n    } catch (err) {\n      actualInlineDecorations = [];\n    }\n    const renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n    const sb = new StringBuilder(2000);\n    renderViewLine(renderLineInput, sb);\n    let newLine;\n    if (_ttPolicy) {\n      newLine = _ttPolicy.createHTML(sb.build());\n    } else {\n      newLine = sb.build();\n    }\n    const lineHTMLNode = document.createElement('span');\n    lineHTMLNode.className = 'sticky-line';\n    lineHTMLNode.classList.add(`stickyLine${line}`);\n    lineHTMLNode.style.lineHeight = `${lineHeight}px`;\n    lineHTMLNode.innerHTML = newLine;\n    const lineNumberHTMLNode = document.createElement('span');\n    lineNumberHTMLNode.className = 'sticky-line';\n    lineNumberHTMLNode.style.lineHeight = `${lineHeight}px`;\n    if (minimapSide === 'left') {\n      lineNumberHTMLNode.style.width = `${layoutInfo.contentLeft - layoutInfo.minimap.minimapCanvasOuterWidth}px`;\n    } else if (minimapSide === 'right') {\n      lineNumberHTMLNode.style.width = `${layoutInfo.contentLeft}px`;\n    }\n    const innerLineNumberHTML = document.createElement('span');\n    if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n      innerLineNumberHTML.innerText = line.toString();\n    } else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n      innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n    }\n    innerLineNumberHTML.className = 'sticky-line-number';\n    innerLineNumberHTML.style.lineHeight = `${lineHeight}px`;\n    innerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n    if (minimapSide === 'left') {\n      innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft - layoutInfo.minimap.minimapCanvasOuterWidth}px`;\n    } else if (minimapSide === 'right') {\n      innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n    }\n    lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n    this._editor.applyFontInfo(lineHTMLNode);\n    this._editor.applyFontInfo(innerLineNumberHTML);\n    child.appendChild(lineNumberHTMLNode);\n    child.appendChild(lineHTMLNode);\n    child.className = 'sticky-line-root';\n    child.setAttribute('role', 'listitem');\n    child.tabIndex = 0;\n    child.style.lineHeight = `${lineHeight}px`;\n    child.style.width = `${width}px`;\n    child.style.height = `${lineHeight}px`;\n    child.style.zIndex = '0';\n    // Special case for the last line of sticky scroll\n    if (index === this._lineNumbers.length - 1) {\n      child.style.position = 'relative';\n      child.style.zIndex = '-1';\n      child.style.top = this._lastLineRelativePosition + 'px';\n    }\n    // Each child has a listener which fires when the mouse hovers over the child\n    this._disposableStore.add(dom.addDisposableListener(child, 'mouseover', e => {\n      if (this._editor.hasModel()) {\n        const mouseOverEvent = new StandardMouseEvent(e);\n        const text = mouseOverEvent.target.innerText;\n        // Line and column number of the hover needed for the control clicking feature\n        this._hoverOnLine = line;\n        // TODO: workaround to find the column index, perhaps need a more solid solution\n        this._hoverOnColumn = this._editor.getModel().getLineContent(line).indexOf(text) + 1 || -1;\n      }\n    }));\n    return child;\n  }\n  getId() {\n    return 'editor.contrib.stickyScrollWidget';\n  }\n  getDomNode() {\n    return this._rootDomNode;\n  }\n  getPosition() {\n    return {\n      preference: null\n    };\n  }\n}","map":{"version":3,"names":["dom","StandardMouseEvent","createTrustedTypesPolicy","Disposable","DisposableStore","EmbeddedCodeEditorWidget","Position","StringBuilder","LineDecoration","RenderLineInput","renderViewLine","StickyScrollWidgetState","constructor","lineNumbers","lastLineRelativePosition","_ttPolicy","createHTML","value","StickyScrollWidget","_editor","_rootDomNode","document","createElement","_disposableStore","_register","_lineNumbers","_lastLineRelativePosition","_hoverOnLine","_hoverOnColumn","_layoutInfo","getLayoutInfo","className","classList","toggle","style","width","minimap","minimapCanvasOuterWidth","verticalScrollbarWidth","hoverOnLine","hoverOnColumn","getCurrentLines","setState","state","clearNode","clear","length","editorLineHeight","getOption","futureWidgetHeight","_renderRootNode","_getViewModel","index","line","entries","childNode","_renderChildNode","appendChild","widgetHeight","display","height","toString","setAttribute","minimapSide","side","marginLeft","child","viewModel","viewLineNumber","coordinatesConverter","convertModelPositionToViewPosition","lineNumber","lineRenderingData","getViewLineRenderingData","layoutInfo","lineHeight","lineNumberOption","actualInlineDecorations","filter","inlineDecorations","minColumn","maxColumn","err","renderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tokens","tabSize","startVisibleColumn","sb","newLine","build","lineHTMLNode","add","innerHTML","lineNumberHTMLNode","contentLeft","innerLineNumberHTML","renderType","innerText","Math","abs","getPosition","lineNumbersWidth","paddingLeft","lineNumbersLeft","applyFontInfo","tabIndex","zIndex","position","top","addDisposableListener","e","hasModel","mouseOverEvent","text","target","getModel","getLineContent","indexOf","getId","getDomNode","preference"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/contrib/stickyScroll/browser/stickyScrollWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport './stickyScroll.css';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\nimport { Position } from '../../../common/core/position.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nexport class StickyScrollWidgetState {\n    constructor(lineNumbers, lastLineRelativePosition) {\n        this.lineNumbers = lineNumbers;\n        this.lastLineRelativePosition = lastLineRelativePosition;\n    }\n}\nconst _ttPolicy = createTrustedTypesPolicy('stickyScrollViewLayer', { createHTML: value => value });\nexport class StickyScrollWidget extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._rootDomNode = document.createElement('div');\n        this._disposableStore = this._register(new DisposableStore());\n        this._lineNumbers = [];\n        this._lastLineRelativePosition = 0;\n        this._hoverOnLine = -1;\n        this._hoverOnColumn = -1;\n        this._layoutInfo = this._editor.getLayoutInfo();\n        this._rootDomNode = document.createElement('div');\n        this._rootDomNode.className = 'sticky-widget';\n        this._rootDomNode.classList.toggle('peek', _editor instanceof EmbeddedCodeEditorWidget);\n        this._rootDomNode.style.width = `${this._layoutInfo.width - this._layoutInfo.minimap.minimapCanvasOuterWidth - this._layoutInfo.verticalScrollbarWidth}px`;\n    }\n    get hoverOnLine() {\n        return this._hoverOnLine;\n    }\n    get hoverOnColumn() {\n        return this._hoverOnColumn;\n    }\n    get lineNumbers() {\n        return this._lineNumbers;\n    }\n    getCurrentLines() {\n        return this._lineNumbers;\n    }\n    setState(state) {\n        dom.clearNode(this._rootDomNode);\n        this._disposableStore.clear();\n        this._lineNumbers.length = 0;\n        const editorLineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n        const futureWidgetHeight = state.lineNumbers.length * editorLineHeight + state.lastLineRelativePosition;\n        if (futureWidgetHeight > 0) {\n            this._lastLineRelativePosition = state.lastLineRelativePosition;\n            this._lineNumbers = state.lineNumbers;\n        }\n        else {\n            this._lastLineRelativePosition = 0;\n            this._lineNumbers = [];\n        }\n        this._renderRootNode();\n    }\n    _renderRootNode() {\n        if (!this._editor._getViewModel()) {\n            return;\n        }\n        for (const [index, line] of this._lineNumbers.entries()) {\n            const childNode = this._renderChildNode(index, line);\n            this._rootDomNode.appendChild(childNode);\n        }\n        const editorLineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n        const widgetHeight = this._lineNumbers.length * editorLineHeight + this._lastLineRelativePosition;\n        this._rootDomNode.style.display = widgetHeight > 0 ? 'block' : 'none';\n        this._rootDomNode.style.height = widgetHeight.toString() + 'px';\n        this._rootDomNode.setAttribute('role', 'list');\n        const minimapSide = this._editor.getOption(71 /* EditorOption.minimap */).side;\n        if (minimapSide === 'left') {\n            this._rootDomNode.style.marginLeft = this._editor.getLayoutInfo().minimap.minimapCanvasOuterWidth + 'px';\n        }\n    }\n    _renderChildNode(index, line) {\n        const child = document.createElement('div');\n        const viewModel = this._editor._getViewModel();\n        const viewLineNumber = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(line, 1)).lineNumber;\n        const lineRenderingData = viewModel.getViewLineRenderingData(viewLineNumber);\n        const layoutInfo = this._editor.getLayoutInfo();\n        const width = layoutInfo.width - layoutInfo.minimap.minimapCanvasOuterWidth - layoutInfo.verticalScrollbarWidth;\n        const minimapSide = this._editor.getOption(71 /* EditorOption.minimap */).side;\n        const lineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n        const lineNumberOption = this._editor.getOption(66 /* EditorOption.lineNumbers */);\n        let actualInlineDecorations;\n        try {\n            actualInlineDecorations = LineDecoration.filter(lineRenderingData.inlineDecorations, viewLineNumber, lineRenderingData.minColumn, lineRenderingData.maxColumn);\n        }\n        catch (err) {\n            actualInlineDecorations = [];\n        }\n        const renderLineInput = new RenderLineInput(true, true, lineRenderingData.content, lineRenderingData.continuesWithWrappedLine, lineRenderingData.isBasicASCII, lineRenderingData.containsRTL, 0, lineRenderingData.tokens, actualInlineDecorations, lineRenderingData.tabSize, lineRenderingData.startVisibleColumn, 1, 1, 1, 500, 'none', true, true, null);\n        const sb = new StringBuilder(2000);\n        renderViewLine(renderLineInput, sb);\n        let newLine;\n        if (_ttPolicy) {\n            newLine = _ttPolicy.createHTML(sb.build());\n        }\n        else {\n            newLine = sb.build();\n        }\n        const lineHTMLNode = document.createElement('span');\n        lineHTMLNode.className = 'sticky-line';\n        lineHTMLNode.classList.add(`stickyLine${line}`);\n        lineHTMLNode.style.lineHeight = `${lineHeight}px`;\n        lineHTMLNode.innerHTML = newLine;\n        const lineNumberHTMLNode = document.createElement('span');\n        lineNumberHTMLNode.className = 'sticky-line';\n        lineNumberHTMLNode.style.lineHeight = `${lineHeight}px`;\n        if (minimapSide === 'left') {\n            lineNumberHTMLNode.style.width = `${layoutInfo.contentLeft - layoutInfo.minimap.minimapCanvasOuterWidth}px`;\n        }\n        else if (minimapSide === 'right') {\n            lineNumberHTMLNode.style.width = `${layoutInfo.contentLeft}px`;\n        }\n        const innerLineNumberHTML = document.createElement('span');\n        if (lineNumberOption.renderType === 1 /* RenderLineNumbersType.On */ || lineNumberOption.renderType === 3 /* RenderLineNumbersType.Interval */ && line % 10 === 0) {\n            innerLineNumberHTML.innerText = line.toString();\n        }\n        else if (lineNumberOption.renderType === 2 /* RenderLineNumbersType.Relative */) {\n            innerLineNumberHTML.innerText = Math.abs(line - this._editor.getPosition().lineNumber).toString();\n        }\n        innerLineNumberHTML.className = 'sticky-line-number';\n        innerLineNumberHTML.style.lineHeight = `${lineHeight}px`;\n        innerLineNumberHTML.style.width = `${layoutInfo.lineNumbersWidth}px`;\n        if (minimapSide === 'left') {\n            innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft - layoutInfo.minimap.minimapCanvasOuterWidth}px`;\n        }\n        else if (minimapSide === 'right') {\n            innerLineNumberHTML.style.paddingLeft = `${layoutInfo.lineNumbersLeft}px`;\n        }\n        lineNumberHTMLNode.appendChild(innerLineNumberHTML);\n        this._editor.applyFontInfo(lineHTMLNode);\n        this._editor.applyFontInfo(innerLineNumberHTML);\n        child.appendChild(lineNumberHTMLNode);\n        child.appendChild(lineHTMLNode);\n        child.className = 'sticky-line-root';\n        child.setAttribute('role', 'listitem');\n        child.tabIndex = 0;\n        child.style.lineHeight = `${lineHeight}px`;\n        child.style.width = `${width}px`;\n        child.style.height = `${lineHeight}px`;\n        child.style.zIndex = '0';\n        // Special case for the last line of sticky scroll\n        if (index === this._lineNumbers.length - 1) {\n            child.style.position = 'relative';\n            child.style.zIndex = '-1';\n            child.style.top = this._lastLineRelativePosition + 'px';\n        }\n        // Each child has a listener which fires when the mouse hovers over the child\n        this._disposableStore.add(dom.addDisposableListener(child, 'mouseover', (e) => {\n            if (this._editor.hasModel()) {\n                const mouseOverEvent = new StandardMouseEvent(e);\n                const text = mouseOverEvent.target.innerText;\n                // Line and column number of the hover needed for the control clicking feature\n                this._hoverOnLine = line;\n                // TODO: workaround to find the column index, perhaps need a more solid solution\n                this._hoverOnColumn = this._editor.getModel().getLineContent(line).indexOf(text) + 1 || -1;\n            }\n        }));\n        return child;\n    }\n    getId() {\n        return 'editor.contrib.stickyScrollWidget';\n    }\n    getDomNode() {\n        return this._rootDomNode;\n    }\n    getPosition() {\n        return {\n            preference: null\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}