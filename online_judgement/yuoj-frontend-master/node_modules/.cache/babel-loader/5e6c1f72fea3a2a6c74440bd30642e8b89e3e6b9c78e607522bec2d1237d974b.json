{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, observableFromEvent, observableSignalFromEvent } from '../../../../base/common/observable.js';\nexport class MovedBlocksLinesPart extends Disposable {\n  constructor(_rootElement, _diffModel, _originalEditorLayoutInfo, _modifiedEditorLayoutInfo, _editors) {\n    super();\n    this._rootElement = _rootElement;\n    this._diffModel = _diffModel;\n    this._originalEditorLayoutInfo = _originalEditorLayoutInfo;\n    this._modifiedEditorLayoutInfo = _modifiedEditorLayoutInfo;\n    this._editors = _editors;\n    const element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    element.setAttribute('class', 'moved-blocks-lines');\n    this._rootElement.appendChild(element);\n    this._register(autorun('update', reader => {\n      const info = this._originalEditorLayoutInfo.read(reader);\n      const info2 = this._modifiedEditorLayoutInfo.read(reader);\n      if (!info || !info2) {\n        return;\n      }\n      element.style.left = `${info.width - info.verticalScrollbarWidth}px`;\n      element.style.height = `${info.height}px`;\n      element.style.width = `${info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesPart.movedCodeBlockPadding}px`;\n    }));\n    const originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => this._editors.original.getScrollTop());\n    const modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollTop());\n    const viewZonesChanged = observableSignalFromEvent('onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n    this._register(autorun('update', reader => {\n      var _a, _b;\n      element.replaceChildren();\n      viewZonesChanged.read(reader);\n      const info = this._originalEditorLayoutInfo.read(reader);\n      const info2 = this._modifiedEditorLayoutInfo.read(reader);\n      if (!info || !info2) {\n        return;\n      }\n      const width = info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesPart.movedCodeBlockPadding;\n      const moves = (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.diff.read(reader)) === null || _b === void 0 ? void 0 : _b.movedTexts;\n      if (!moves) {\n        return;\n      }\n      let idx = 0;\n      for (const m of moves) {\n        function computeLineStart(range, editor) {\n          const t1 = editor.getTopForLineNumber(range.startLineNumber);\n          const t2 = editor.getTopForLineNumber(range.endLineNumberExclusive);\n          return (t1 + t2) / 2;\n        }\n        const start = computeLineStart(m.lineRangeMapping.original, this._editors.original);\n        const startOffset = originalScrollTop.read(reader);\n        const end = computeLineStart(m.lineRangeMapping.modified, this._editors.modified);\n        const endOffset = modifiedScrollTop.read(reader);\n        const top = start - startOffset;\n        const bottom = end - endOffset;\n        const center = width / 2 - moves.length * 5 + idx * 10;\n        idx++;\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', `M ${0} ${top} L ${center} ${top} L ${center} ${bottom} L ${width} ${bottom}`);\n        path.setAttribute('fill', 'none');\n        element.appendChild(path);\n      }\n    }));\n  }\n}\nMovedBlocksLinesPart.movedCodeBlockPadding = 4;","map":{"version":3,"names":["Disposable","autorun","observableFromEvent","observableSignalFromEvent","MovedBlocksLinesPart","constructor","_rootElement","_diffModel","_originalEditorLayoutInfo","_modifiedEditorLayoutInfo","_editors","element","document","createElementNS","setAttribute","appendChild","_register","reader","info","read","info2","style","left","width","verticalScrollbarWidth","height","contentLeft","movedCodeBlockPadding","originalScrollTop","original","onDidScrollChange","getScrollTop","modifiedScrollTop","modified","viewZonesChanged","onDidChangeViewZones","_a","_b","replaceChildren","moves","diff","movedTexts","idx","m","computeLineStart","range","editor","t1","getTopForLineNumber","startLineNumber","t2","endLineNumberExclusive","start","lineRangeMapping","startOffset","end","endOffset","top","bottom","center","length","path"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget2/movedBlocksLines.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, observableFromEvent, observableSignalFromEvent } from '../../../../base/common/observable.js';\nexport class MovedBlocksLinesPart extends Disposable {\n    constructor(_rootElement, _diffModel, _originalEditorLayoutInfo, _modifiedEditorLayoutInfo, _editors) {\n        super();\n        this._rootElement = _rootElement;\n        this._diffModel = _diffModel;\n        this._originalEditorLayoutInfo = _originalEditorLayoutInfo;\n        this._modifiedEditorLayoutInfo = _modifiedEditorLayoutInfo;\n        this._editors = _editors;\n        const element = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        element.setAttribute('class', 'moved-blocks-lines');\n        this._rootElement.appendChild(element);\n        this._register(autorun('update', (reader) => {\n            const info = this._originalEditorLayoutInfo.read(reader);\n            const info2 = this._modifiedEditorLayoutInfo.read(reader);\n            if (!info || !info2) {\n                return;\n            }\n            element.style.left = `${info.width - info.verticalScrollbarWidth}px`;\n            element.style.height = `${info.height}px`;\n            element.style.width = `${info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesPart.movedCodeBlockPadding}px`;\n        }));\n        const originalScrollTop = observableFromEvent(this._editors.original.onDidScrollChange, () => this._editors.original.getScrollTop());\n        const modifiedScrollTop = observableFromEvent(this._editors.modified.onDidScrollChange, () => this._editors.modified.getScrollTop());\n        const viewZonesChanged = observableSignalFromEvent('onDidChangeViewZones', this._editors.modified.onDidChangeViewZones);\n        this._register(autorun('update', (reader) => {\n            var _a, _b;\n            element.replaceChildren();\n            viewZonesChanged.read(reader);\n            const info = this._originalEditorLayoutInfo.read(reader);\n            const info2 = this._modifiedEditorLayoutInfo.read(reader);\n            if (!info || !info2) {\n                return;\n            }\n            const width = info.verticalScrollbarWidth + info.contentLeft - MovedBlocksLinesPart.movedCodeBlockPadding;\n            const moves = (_b = (_a = this._diffModel.read(reader)) === null || _a === void 0 ? void 0 : _a.diff.read(reader)) === null || _b === void 0 ? void 0 : _b.movedTexts;\n            if (!moves) {\n                return;\n            }\n            let idx = 0;\n            for (const m of moves) {\n                function computeLineStart(range, editor) {\n                    const t1 = editor.getTopForLineNumber(range.startLineNumber);\n                    const t2 = editor.getTopForLineNumber(range.endLineNumberExclusive);\n                    return (t1 + t2) / 2;\n                }\n                const start = computeLineStart(m.lineRangeMapping.original, this._editors.original);\n                const startOffset = originalScrollTop.read(reader);\n                const end = computeLineStart(m.lineRangeMapping.modified, this._editors.modified);\n                const endOffset = modifiedScrollTop.read(reader);\n                const top = start - startOffset;\n                const bottom = end - endOffset;\n                const center = (width / 2) - moves.length * 5 + idx * 10;\n                idx++;\n                const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                path.setAttribute('d', `M ${0} ${top} L ${center} ${top} L ${center} ${bottom} L ${width} ${bottom}`);\n                path.setAttribute('fill', 'none');\n                element.appendChild(path);\n            }\n        }));\n    }\n}\nMovedBlocksLinesPart.movedCodeBlockPadding = 4;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}