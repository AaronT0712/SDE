{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { coalesce, equals, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CodeActionItem, CodeActionKind, CodeActionTriggerSource, filtersAction, mayIncludeActionsOfKind } from '../common/types.js';\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const quickFixCommandId = 'editor.action.quickFix';\nexport const autoFixCommandId = 'editor.action.autoFix';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\nclass ManagedCodeActionSet extends Disposable {\n  static codeActionsPreferredComparator(a, b) {\n    if (a.isPreferred && !b.isPreferred) {\n      return -1;\n    } else if (!a.isPreferred && b.isPreferred) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n  static codeActionsComparator({\n    action: a\n  }, {\n    action: b\n  }) {\n    if (isNonEmptyArray(a.diagnostics)) {\n      return isNonEmptyArray(b.diagnostics) ? ManagedCodeActionSet.codeActionsPreferredComparator(a, b) : -1;\n    } else if (isNonEmptyArray(b.diagnostics)) {\n      return 1;\n    } else {\n      return ManagedCodeActionSet.codeActionsPreferredComparator(a, b); // both have no diagnostics\n    }\n  }\n\n  constructor(actions, documentation, disposables) {\n    super();\n    this.documentation = documentation;\n    this._register(disposables);\n    this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\n    this.validActions = this.allActions.filter(({\n      action\n    }) => !action.disabled);\n  }\n  get hasAutoFix() {\n    return this.validActions.some(({\n      action: fix\n    }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\n  }\n}\nconst emptyCodeActionsResponse = {\n  actions: [],\n  documentation: undefined\n};\nexport function getCodeActions(registry, model, rangeOrSelection, trigger, progress, token) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const filter = trigger.filter || {};\n    const codeActionContext = {\n      only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\n      trigger: trigger.type\n    };\n    const cts = new TextModelCancellationTokenSource(model, token);\n    const providers = getCodeActionProviders(registry, model, filter);\n    const disposables = new DisposableStore();\n    const promises = providers.map(provider => __awaiter(this, void 0, void 0, function* () {\n      try {\n        progress.report(provider);\n        const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n        if (providedCodeActions) {\n          disposables.add(providedCodeActions);\n        }\n        if (cts.token.isCancellationRequested) {\n          return emptyCodeActionsResponse;\n        }\n        const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\n        const documentation = getDocumentationFromProvider(provider, filteredActions, filter.include);\n        return {\n          actions: filteredActions.map(action => new CodeActionItem(action, provider)),\n          documentation\n        };\n      } catch (err) {\n        if (isCancellationError(err)) {\n          throw err;\n        }\n        onUnexpectedExternalError(err);\n        return emptyCodeActionsResponse;\n      }\n    }));\n    const listener = registry.onDidChange(() => {\n      const newProviders = registry.all(model);\n      if (!equals(newProviders, providers)) {\n        cts.cancel();\n      }\n    });\n    try {\n      const actions = yield Promise.all(promises);\n      const allActions = actions.map(x => x.actions).flat();\n      const allDocumentation = [...coalesce(actions.map(x => x.documentation)), ...getAdditionalDocumentationForShowingActions(registry, model, trigger, allActions)];\n      return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n    } finally {\n      listener.dispose();\n      cts.dispose();\n    }\n  });\n}\nfunction getCodeActionProviders(registry, model, filter) {\n  return registry.all(model)\n  // Don't include providers that we know will not return code actions of interest\n  .filter(provider => {\n    if (!provider.providedCodeActionKinds) {\n      // We don't know what type of actions this provider will return.\n      return true;\n    }\n    return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\n  });\n}\nfunction* getAdditionalDocumentationForShowingActions(registry, model, trigger, actionsToShow) {\n  var _a, _b, _c;\n  if (model && actionsToShow.length) {\n    for (const provider of registry.all(model)) {\n      if (provider._getAdditionalMenuItems) {\n        yield* (_a = provider._getAdditionalMenuItems) === null || _a === void 0 ? void 0 : _a.call(provider, {\n          trigger: trigger.type,\n          only: (_c = (_b = trigger.filter) === null || _b === void 0 ? void 0 : _b.include) === null || _c === void 0 ? void 0 : _c.value\n        }, actionsToShow.map(item => item.action));\n      }\n    }\n  }\n}\nfunction getDocumentationFromProvider(provider, providedCodeActions, only) {\n  if (!provider.documentation) {\n    return undefined;\n  }\n  const documentation = provider.documentation.map(entry => ({\n    kind: new CodeActionKind(entry.kind),\n    command: entry.command\n  }));\n  if (only) {\n    let currentBest;\n    for (const entry of documentation) {\n      if (entry.kind.contains(only)) {\n        if (!currentBest) {\n          currentBest = entry;\n        } else {\n          // Take best match\n          if (currentBest.kind.contains(entry.kind)) {\n            currentBest = entry;\n          }\n        }\n      }\n    }\n    if (currentBest) {\n      return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\n    }\n  }\n  // Otherwise, check to see if any of the provided actions match.\n  for (const action of providedCodeActions) {\n    if (!action.kind) {\n      continue;\n    }\n    for (const entry of documentation) {\n      if (entry.kind.contains(new CodeActionKind(action.kind))) {\n        return entry.command;\n      }\n    }\n  }\n  return undefined;\n}\nexport var ApplyCodeActionReason;\n(function (ApplyCodeActionReason) {\n  ApplyCodeActionReason[\"OnSave\"] = \"onSave\";\n  ApplyCodeActionReason[\"FromProblemsView\"] = \"fromProblemsView\";\n  ApplyCodeActionReason[\"FromCodeActions\"] = \"fromCodeActions\";\n})(ApplyCodeActionReason || (ApplyCodeActionReason = {}));\nexport function applyCodeAction(accessor, item, codeActionReason, options, token = CancellationToken.None) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const bulkEditService = accessor.get(IBulkEditService);\n    const commandService = accessor.get(ICommandService);\n    const telemetryService = accessor.get(ITelemetryService);\n    const notificationService = accessor.get(INotificationService);\n    telemetryService.publicLog2('codeAction.applyCodeAction', {\n      codeActionTitle: item.action.title,\n      codeActionKind: item.action.kind,\n      codeActionIsPreferred: !!item.action.isPreferred,\n      reason: codeActionReason\n    });\n    yield item.resolve(token);\n    if (token.isCancellationRequested) {\n      return;\n    }\n    if ((_a = item.action.edit) === null || _a === void 0 ? void 0 : _a.edits.length) {\n      const result = yield bulkEditService.apply(item.action.edit, {\n        editor: options === null || options === void 0 ? void 0 : options.editor,\n        label: item.action.title,\n        quotableLabel: item.action.title,\n        code: 'undoredo.codeAction',\n        respectAutoSaveConfig: codeActionReason !== ApplyCodeActionReason.OnSave,\n        showPreview: options === null || options === void 0 ? void 0 : options.preview\n      });\n      if (!result.isApplied) {\n        return;\n      }\n    }\n    if (item.action.command) {\n      try {\n        yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n      } catch (err) {\n        const message = asMessage(err);\n        notificationService.error(typeof message === 'string' ? message : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n      }\n    }\n  });\n}\nfunction asMessage(err) {\n  if (typeof err === 'string') {\n    return err;\n  } else if (err instanceof Error && typeof err.message === 'string') {\n    return err.message;\n  } else {\n    return undefined;\n  }\n}\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (!(resource instanceof URI)) {\n      throw illegalArgument();\n    }\n    const {\n      codeActionProvider\n    } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(resource);\n    if (!model) {\n      throw illegalArgument();\n    }\n    const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection) ? Selection.liftSelection(rangeOrSelection) : Range.isIRange(rangeOrSelection) ? model.validateRange(rangeOrSelection) : undefined;\n    if (!validatedRangeOrSelection) {\n      throw illegalArgument();\n    }\n    const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\n    const codeActionSet = yield getCodeActions(codeActionProvider, model, validatedRangeOrSelection, {\n      type: 1 /* languages.CodeActionTriggerType.Invoke */,\n      triggerAction: CodeActionTriggerSource.Default,\n      filter: {\n        includeSourceActions: true,\n        include\n      }\n    }, Progress.None, CancellationToken.None);\n    const resolving = [];\n    const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n    for (let i = 0; i < resolveCount; i++) {\n      resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n    }\n    try {\n      yield Promise.all(resolving);\n      return codeActionSet.validActions.map(item => item.action);\n    } finally {\n      setTimeout(() => codeActionSet.dispose(), 100);\n    }\n  });\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","coalesce","equals","isNonEmptyArray","CancellationToken","illegalArgument","isCancellationError","onUnexpectedExternalError","Disposable","DisposableStore","URI","IBulkEditService","Range","Selection","ILanguageFeaturesService","IModelService","TextModelCancellationTokenSource","nls","CommandsRegistry","ICommandService","INotificationService","Progress","ITelemetryService","CodeActionItem","CodeActionKind","CodeActionTriggerSource","filtersAction","mayIncludeActionsOfKind","codeActionCommandId","quickFixCommandId","autoFixCommandId","refactorCommandId","sourceActionCommandId","organizeImportsCommandId","fixAllCommandId","ManagedCodeActionSet","codeActionsPreferredComparator","a","b","isPreferred","codeActionsComparator","action","diagnostics","constructor","actions","documentation","disposables","_register","allActions","sort","validActions","filter","disabled","hasAutoFix","some","fix","kind","QuickFix","contains","emptyCodeActionsResponse","undefined","getCodeActions","registry","model","rangeOrSelection","trigger","progress","token","_a","codeActionContext","only","include","type","cts","providers","getCodeActionProviders","promises","map","provider","report","providedCodeActions","provideCodeActions","add","isCancellationRequested","filteredActions","getDocumentationFromProvider","err","listener","onDidChange","newProviders","all","cancel","x","flat","allDocumentation","getAdditionalDocumentationForShowingActions","dispose","providedCodeActionKinds","actionsToShow","_b","_c","length","_getAdditionalMenuItems","call","item","entry","command","currentBest","ApplyCodeActionReason","applyCodeAction","accessor","codeActionReason","options","None","bulkEditService","get","commandService","telemetryService","notificationService","publicLog2","codeActionTitle","title","codeActionKind","codeActionIsPreferred","reason","edit","edits","editor","label","quotableLabel","code","respectAutoSaveConfig","OnSave","showPreview","preview","isApplied","executeCommand","id","arguments","message","asMessage","error","localize","Error","registerCommand","resource","itemResolveCount","codeActionProvider","getModel","validatedRangeOrSelection","isISelection","liftSelection","isIRange","validateRange","codeActionSet","triggerAction","Default","includeSourceActions","resolving","resolveCount","Math","min","i","push","setTimeout"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeAction.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce, equals, isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { illegalArgument, isCancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { TextModelCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { CodeActionItem, CodeActionKind, CodeActionTriggerSource, filtersAction, mayIncludeActionsOfKind } from '../common/types.js';\nexport const codeActionCommandId = 'editor.action.codeAction';\nexport const quickFixCommandId = 'editor.action.quickFix';\nexport const autoFixCommandId = 'editor.action.autoFix';\nexport const refactorCommandId = 'editor.action.refactor';\nexport const sourceActionCommandId = 'editor.action.sourceAction';\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\nexport const fixAllCommandId = 'editor.action.fixAll';\nclass ManagedCodeActionSet extends Disposable {\n    static codeActionsPreferredComparator(a, b) {\n        if (a.isPreferred && !b.isPreferred) {\n            return -1;\n        }\n        else if (!a.isPreferred && b.isPreferred) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    static codeActionsComparator({ action: a }, { action: b }) {\n        if (isNonEmptyArray(a.diagnostics)) {\n            return isNonEmptyArray(b.diagnostics) ? ManagedCodeActionSet.codeActionsPreferredComparator(a, b) : -1;\n        }\n        else if (isNonEmptyArray(b.diagnostics)) {\n            return 1;\n        }\n        else {\n            return ManagedCodeActionSet.codeActionsPreferredComparator(a, b); // both have no diagnostics\n        }\n    }\n    constructor(actions, documentation, disposables) {\n        super();\n        this.documentation = documentation;\n        this._register(disposables);\n        this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\n    }\n    get hasAutoFix() {\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\n    }\n}\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\nexport function getCodeActions(registry, model, rangeOrSelection, trigger, progress, token) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const filter = trigger.filter || {};\n        const codeActionContext = {\n            only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\n            trigger: trigger.type,\n        };\n        const cts = new TextModelCancellationTokenSource(model, token);\n        const providers = getCodeActionProviders(registry, model, filter);\n        const disposables = new DisposableStore();\n        const promises = providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                progress.report(provider);\n                const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\n                if (providedCodeActions) {\n                    disposables.add(providedCodeActions);\n                }\n                if (cts.token.isCancellationRequested) {\n                    return emptyCodeActionsResponse;\n                }\n                const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\n                const documentation = getDocumentationFromProvider(provider, filteredActions, filter.include);\n                return {\n                    actions: filteredActions.map(action => new CodeActionItem(action, provider)),\n                    documentation\n                };\n            }\n            catch (err) {\n                if (isCancellationError(err)) {\n                    throw err;\n                }\n                onUnexpectedExternalError(err);\n                return emptyCodeActionsResponse;\n            }\n        }));\n        const listener = registry.onDidChange(() => {\n            const newProviders = registry.all(model);\n            if (!equals(newProviders, providers)) {\n                cts.cancel();\n            }\n        });\n        try {\n            const actions = yield Promise.all(promises);\n            const allActions = actions.map(x => x.actions).flat();\n            const allDocumentation = [\n                ...coalesce(actions.map(x => x.documentation)),\n                ...getAdditionalDocumentationForShowingActions(registry, model, trigger, allActions)\n            ];\n            return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\n        }\n        finally {\n            listener.dispose();\n            cts.dispose();\n        }\n    });\n}\nfunction getCodeActionProviders(registry, model, filter) {\n    return registry.all(model)\n        // Don't include providers that we know will not return code actions of interest\n        .filter(provider => {\n        if (!provider.providedCodeActionKinds) {\n            // We don't know what type of actions this provider will return.\n            return true;\n        }\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\n    });\n}\nfunction* getAdditionalDocumentationForShowingActions(registry, model, trigger, actionsToShow) {\n    var _a, _b, _c;\n    if (model && actionsToShow.length) {\n        for (const provider of registry.all(model)) {\n            if (provider._getAdditionalMenuItems) {\n                yield* (_a = provider._getAdditionalMenuItems) === null || _a === void 0 ? void 0 : _a.call(provider, { trigger: trigger.type, only: (_c = (_b = trigger.filter) === null || _b === void 0 ? void 0 : _b.include) === null || _c === void 0 ? void 0 : _c.value }, actionsToShow.map(item => item.action));\n            }\n        }\n    }\n}\nfunction getDocumentationFromProvider(provider, providedCodeActions, only) {\n    if (!provider.documentation) {\n        return undefined;\n    }\n    const documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\n    if (only) {\n        let currentBest;\n        for (const entry of documentation) {\n            if (entry.kind.contains(only)) {\n                if (!currentBest) {\n                    currentBest = entry;\n                }\n                else {\n                    // Take best match\n                    if (currentBest.kind.contains(entry.kind)) {\n                        currentBest = entry;\n                    }\n                }\n            }\n        }\n        if (currentBest) {\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\n        }\n    }\n    // Otherwise, check to see if any of the provided actions match.\n    for (const action of providedCodeActions) {\n        if (!action.kind) {\n            continue;\n        }\n        for (const entry of documentation) {\n            if (entry.kind.contains(new CodeActionKind(action.kind))) {\n                return entry.command;\n            }\n        }\n    }\n    return undefined;\n}\nexport var ApplyCodeActionReason;\n(function (ApplyCodeActionReason) {\n    ApplyCodeActionReason[\"OnSave\"] = \"onSave\";\n    ApplyCodeActionReason[\"FromProblemsView\"] = \"fromProblemsView\";\n    ApplyCodeActionReason[\"FromCodeActions\"] = \"fromCodeActions\";\n})(ApplyCodeActionReason || (ApplyCodeActionReason = {}));\nexport function applyCodeAction(accessor, item, codeActionReason, options, token = CancellationToken.None) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const bulkEditService = accessor.get(IBulkEditService);\n        const commandService = accessor.get(ICommandService);\n        const telemetryService = accessor.get(ITelemetryService);\n        const notificationService = accessor.get(INotificationService);\n        telemetryService.publicLog2('codeAction.applyCodeAction', {\n            codeActionTitle: item.action.title,\n            codeActionKind: item.action.kind,\n            codeActionIsPreferred: !!item.action.isPreferred,\n            reason: codeActionReason,\n        });\n        yield item.resolve(token);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        if ((_a = item.action.edit) === null || _a === void 0 ? void 0 : _a.edits.length) {\n            const result = yield bulkEditService.apply(item.action.edit, {\n                editor: options === null || options === void 0 ? void 0 : options.editor,\n                label: item.action.title,\n                quotableLabel: item.action.title,\n                code: 'undoredo.codeAction',\n                respectAutoSaveConfig: codeActionReason !== ApplyCodeActionReason.OnSave,\n                showPreview: options === null || options === void 0 ? void 0 : options.preview,\n            });\n            if (!result.isApplied) {\n                return;\n            }\n        }\n        if (item.action.command) {\n            try {\n                yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\n            }\n            catch (err) {\n                const message = asMessage(err);\n                notificationService.error(typeof message === 'string'\n                    ? message\n                    : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\n            }\n        }\n    });\n}\nfunction asMessage(err) {\n    if (typeof err === 'string') {\n        return err;\n    }\n    else if (err instanceof Error && typeof err.message === 'string') {\n        return err.message;\n    }\n    else {\n        return undefined;\n    }\n}\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!(resource instanceof URI)) {\n            throw illegalArgument();\n        }\n        const { codeActionProvider } = accessor.get(ILanguageFeaturesService);\n        const model = accessor.get(IModelService).getModel(resource);\n        if (!model) {\n            throw illegalArgument();\n        }\n        const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\n            ? Selection.liftSelection(rangeOrSelection)\n            : Range.isIRange(rangeOrSelection)\n                ? model.validateRange(rangeOrSelection)\n                : undefined;\n        if (!validatedRangeOrSelection) {\n            throw illegalArgument();\n        }\n        const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\n        const codeActionSet = yield getCodeActions(codeActionProvider, model, validatedRangeOrSelection, { type: 1 /* languages.CodeActionTriggerType.Invoke */, triggerAction: CodeActionTriggerSource.Default, filter: { includeSourceActions: true, include } }, Progress.None, CancellationToken.None);\n        const resolving = [];\n        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\n        for (let i = 0; i < resolveCount; i++) {\n            resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\n        }\n        try {\n            yield Promise.all(resolving);\n            return codeActionSet.validActions.map(item => item.action);\n        }\n        finally {\n            setTimeout(() => codeActionSet.dispose(), 100);\n        }\n    });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}