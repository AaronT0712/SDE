{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nclass CodeActionOracle extends Disposable {\n  constructor(_editor, _markerService, _signalChange, _delay = 250) {\n    super();\n    this._editor = _editor;\n    this._markerService = _markerService;\n    this._signalChange = _signalChange;\n    this._delay = _delay;\n    this._autoTriggerTimer = this._register(new TimeoutTimer());\n    this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\n    this._register(this._editor.onDidChangeCursorPosition(() => this._tryAutoTrigger()));\n  }\n  trigger(trigger) {\n    const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n    this._signalChange(selection ? {\n      trigger,\n      selection\n    } : undefined);\n  }\n  _onMarkerChanges(resources) {\n    const model = this._editor.getModel();\n    if (model && resources.some(resource => isEqual(resource, model.uri))) {\n      this._tryAutoTrigger();\n    }\n  }\n  _tryAutoTrigger() {\n    this._autoTriggerTimer.cancelAndSet(() => {\n      this.trigger({\n        type: 2 /* CodeActionTriggerType.Auto */,\n        triggerAction: CodeActionTriggerSource.Default\n      });\n    }, this._delay);\n  }\n  _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n    if (!this._editor.hasModel()) {\n      return undefined;\n    }\n    const model = this._editor.getModel();\n    const selection = this._editor.getSelection();\n    if (selection.isEmpty() && trigger.type === 2 /* CodeActionTriggerType.Auto */) {\n      const {\n        lineNumber,\n        column\n      } = selection.getPosition();\n      const line = model.getLineContent(lineNumber);\n      if (line.length === 0) {\n        // empty line\n        return undefined;\n      } else if (column === 1) {\n        // look only right\n        if (/\\s/.test(line[0])) {\n          return undefined;\n        }\n      } else if (column === model.getLineMaxColumn(lineNumber)) {\n        // look only left\n        if (/\\s/.test(line[line.length - 1])) {\n          return undefined;\n        }\n      } else {\n        // look left and right\n        if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n          return undefined;\n        }\n      }\n    }\n    return selection;\n  }\n}\nexport var CodeActionsState;\n(function (CodeActionsState) {\n  CodeActionsState.Empty = {\n    type: 0 /* Type.Empty */\n  };\n  class Triggered {\n    constructor(trigger, position, _cancellablePromise) {\n      this.trigger = trigger;\n      this.position = position;\n      this._cancellablePromise = _cancellablePromise;\n      this.type = 1 /* Type.Triggered */;\n      this.actions = _cancellablePromise.catch(e => {\n        if (isCancellationError(e)) {\n          return emptyCodeActionSet;\n        }\n        throw e;\n      });\n    }\n    cancel() {\n      this._cancellablePromise.cancel();\n    }\n  }\n  CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nconst emptyCodeActionSet = Object.freeze({\n  allActions: [],\n  validActions: [],\n  dispose: () => {},\n  documentation: [],\n  hasAutoFix: false\n});\nexport class CodeActionModel extends Disposable {\n  constructor(_editor, _registry, _markerService, contextKeyService, _progressService) {\n    super();\n    this._editor = _editor;\n    this._registry = _registry;\n    this._markerService = _markerService;\n    this._progressService = _progressService;\n    this._codeActionOracle = this._register(new MutableDisposable());\n    this._state = CodeActionsState.Empty;\n    this._onDidChangeState = this._register(new Emitter());\n    this.onDidChangeState = this._onDidChangeState.event;\n    this._disposed = false;\n    this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n    this._register(this._editor.onDidChangeModel(() => this._update()));\n    this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\n    this._register(this._registry.onDidChange(() => this._update()));\n    this._update();\n  }\n  dispose() {\n    if (this._disposed) {\n      return;\n    }\n    this._disposed = true;\n    super.dispose();\n    this.setState(CodeActionsState.Empty, true);\n  }\n  _update() {\n    if (this._disposed) {\n      return;\n    }\n    this._codeActionOracle.value = undefined;\n    this.setState(CodeActionsState.Empty);\n    const model = this._editor.getModel();\n    if (model && this._registry.has(model) && !this._editor.getOption(89 /* EditorOption.readOnly */)) {\n      const supportedActions = this._registry.all(model).flatMap(provider => {\n        var _a;\n        return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : [];\n      });\n      this._supportedCodeActions.set(supportedActions.join(' '));\n      this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\n        var _a;\n        if (!trigger) {\n          this.setState(CodeActionsState.Empty);\n          return;\n        }\n        const actions = createCancelablePromise(token => getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token));\n        if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n          (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n        }\n        this.setState(new CodeActionsState.Triggered(trigger.trigger, trigger.selection.getStartPosition(), actions));\n      }, undefined);\n      this._codeActionOracle.value.trigger({\n        type: 2 /* CodeActionTriggerType.Auto */,\n        triggerAction: CodeActionTriggerSource.Default\n      });\n    } else {\n      this._supportedCodeActions.reset();\n    }\n  }\n  trigger(trigger) {\n    var _a;\n    (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(trigger);\n  }\n  setState(newState, skipNotify) {\n    if (newState === this._state) {\n      return;\n    }\n    // Cancel old request\n    if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n      this._state.cancel();\n    }\n    this._state = newState;\n    if (!skipNotify && !this._disposed) {\n      this._onDidChangeState.fire(newState);\n    }\n  }\n}","map":{"version":3,"names":["createCancelablePromise","TimeoutTimer","isCancellationError","Emitter","Disposable","MutableDisposable","isEqual","RawContextKey","Progress","CodeActionTriggerSource","getCodeActions","SUPPORTED_CODE_ACTIONS","CodeActionOracle","constructor","_editor","_markerService","_signalChange","_delay","_autoTriggerTimer","_register","onMarkerChanged","e","_onMarkerChanges","onDidChangeCursorPosition","_tryAutoTrigger","trigger","selection","_getRangeOfSelectionUnlessWhitespaceEnclosed","undefined","resources","model","getModel","some","resource","uri","cancelAndSet","type","triggerAction","Default","hasModel","getSelection","isEmpty","lineNumber","column","getPosition","line","getLineContent","length","test","getLineMaxColumn","CodeActionsState","Empty","Triggered","position","_cancellablePromise","actions","catch","emptyCodeActionSet","cancel","Object","freeze","allActions","validActions","dispose","documentation","hasAutoFix","CodeActionModel","_registry","contextKeyService","_progressService","_codeActionOracle","_state","_onDidChangeState","onDidChangeState","event","_disposed","_supportedCodeActions","bindTo","onDidChangeModel","_update","onDidChangeModelLanguage","onDidChange","setState","value","has","getOption","supportedActions","all","flatMap","provider","_a","providedCodeActionKinds","set","join","token","None","showWhile","getStartPosition","reset","newState","skipNotify","fire"],"sources":["/Users/aaron/Desktop/SDE/online_judgement/yuoj-frontend-master/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createCancelablePromise, TimeoutTimer } from '../../../../base/common/async.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { CodeActionTriggerSource } from '../common/types.js';\nimport { getCodeActions } from './codeAction.js';\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\nclass CodeActionOracle extends Disposable {\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\n        super();\n        this._editor = _editor;\n        this._markerService = _markerService;\n        this._signalChange = _signalChange;\n        this._delay = _delay;\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\n        this._register(this._editor.onDidChangeCursorPosition(() => this._tryAutoTrigger()));\n    }\n    trigger(trigger) {\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\n        this._signalChange(selection ? { trigger, selection } : undefined);\n    }\n    _onMarkerChanges(resources) {\n        const model = this._editor.getModel();\n        if (model && resources.some(resource => isEqual(resource, model.uri))) {\n            this._tryAutoTrigger();\n        }\n    }\n    _tryAutoTrigger() {\n        this._autoTriggerTimer.cancelAndSet(() => {\n            this.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }, this._delay);\n    }\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\n        if (!this._editor.hasModel()) {\n            return undefined;\n        }\n        const model = this._editor.getModel();\n        const selection = this._editor.getSelection();\n        if (selection.isEmpty() && trigger.type === 2 /* CodeActionTriggerType.Auto */) {\n            const { lineNumber, column } = selection.getPosition();\n            const line = model.getLineContent(lineNumber);\n            if (line.length === 0) {\n                // empty line\n                return undefined;\n            }\n            else if (column === 1) {\n                // look only right\n                if (/\\s/.test(line[0])) {\n                    return undefined;\n                }\n            }\n            else if (column === model.getLineMaxColumn(lineNumber)) {\n                // look only left\n                if (/\\s/.test(line[line.length - 1])) {\n                    return undefined;\n                }\n            }\n            else {\n                // look left and right\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\n                    return undefined;\n                }\n            }\n        }\n        return selection;\n    }\n}\nexport var CodeActionsState;\n(function (CodeActionsState) {\n    CodeActionsState.Empty = { type: 0 /* Type.Empty */ };\n    class Triggered {\n        constructor(trigger, position, _cancellablePromise) {\n            this.trigger = trigger;\n            this.position = position;\n            this._cancellablePromise = _cancellablePromise;\n            this.type = 1 /* Type.Triggered */;\n            this.actions = _cancellablePromise.catch((e) => {\n                if (isCancellationError(e)) {\n                    return emptyCodeActionSet;\n                }\n                throw e;\n            });\n        }\n        cancel() {\n            this._cancellablePromise.cancel();\n        }\n    }\n    CodeActionsState.Triggered = Triggered;\n})(CodeActionsState || (CodeActionsState = {}));\nconst emptyCodeActionSet = Object.freeze({\n    allActions: [],\n    validActions: [],\n    dispose: () => { },\n    documentation: [],\n    hasAutoFix: false\n});\nexport class CodeActionModel extends Disposable {\n    constructor(_editor, _registry, _markerService, contextKeyService, _progressService) {\n        super();\n        this._editor = _editor;\n        this._registry = _registry;\n        this._markerService = _markerService;\n        this._progressService = _progressService;\n        this._codeActionOracle = this._register(new MutableDisposable());\n        this._state = CodeActionsState.Empty;\n        this._onDidChangeState = this._register(new Emitter());\n        this.onDidChangeState = this._onDidChangeState.event;\n        this._disposed = false;\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeModel(() => this._update()));\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\n        this._register(this._registry.onDidChange(() => this._update()));\n        this._update();\n    }\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        super.dispose();\n        this.setState(CodeActionsState.Empty, true);\n    }\n    _update() {\n        if (this._disposed) {\n            return;\n        }\n        this._codeActionOracle.value = undefined;\n        this.setState(CodeActionsState.Empty);\n        const model = this._editor.getModel();\n        if (model\n            && this._registry.has(model)\n            && !this._editor.getOption(89 /* EditorOption.readOnly */)) {\n            const supportedActions = this._registry.all(model).flatMap(provider => { var _a; return (_a = provider.providedCodeActionKinds) !== null && _a !== void 0 ? _a : []; });\n            this._supportedCodeActions.set(supportedActions.join(' '));\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\n                var _a;\n                if (!trigger) {\n                    this.setState(CodeActionsState.Empty);\n                    return;\n                }\n                const actions = createCancelablePromise(token => getCodeActions(this._registry, model, trigger.selection, trigger.trigger, Progress.None, token));\n                if (trigger.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\n                }\n                this.setState(new CodeActionsState.Triggered(trigger.trigger, trigger.selection.getStartPosition(), actions));\n            }, undefined);\n            this._codeActionOracle.value.trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.Default });\n        }\n        else {\n            this._supportedCodeActions.reset();\n        }\n    }\n    trigger(trigger) {\n        var _a;\n        (_a = this._codeActionOracle.value) === null || _a === void 0 ? void 0 : _a.trigger(trigger);\n    }\n    setState(newState, skipNotify) {\n        if (newState === this._state) {\n            return;\n        }\n        // Cancel old request\n        if (this._state.type === 1 /* CodeActionsState.Type.Triggered */) {\n            this._state.cancel();\n        }\n        this._state = newState;\n        if (!skipNotify && !this._disposed) {\n            this._onDidChangeState.fire(newState);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}